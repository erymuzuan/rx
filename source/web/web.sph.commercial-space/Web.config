<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core" />
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
      <section name="typeAliases" type="Spring.Context.Support.TypeAliasesSectionHandler, Spring.Core" />
    </sectionGroup>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core"><section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" /><section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" /><section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /><section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" /></sectionGroup></configSections>
  <connectionStrings>
    <add name="DefaultConnection" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=aspnet-web.sph.commercial_space-20130509101657;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\aspnet-web.sph.commercial_space-20130509101657.mdf" providerName="System.Data.SqlClient" />
    <add name="Sph" connectionString="Data Source=.\katmai;Initial Catalog=Sph;Integrated Security=True;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" />
    </authentication>
    <pages controlRenderingCompatibilityVersion="4.0">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>


    <roleManager enabled="true" cacheRolesInCookie="true" defaultProvider="SphRoleProvider">
      <providers>
        <clear />
        <add applicationName="sph" connectionStringName="sph" name="SphRoleProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
      </providers>
    </roleManager>
    
    <membership defaultProvider="AspNetSqlMembershipProvider">
      <providers>
        <clear />
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" connectionStringName="sph" requiresQuestionAndAnswer="false" requiresUniqueEmail="true" passwordFormat="Hashed" minRequiredNonalphanumericCharacters="0" minRequiredPasswordLength="4" applicationName="sph" />
      </providers>
    </membership>
    
  </system.web>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.2.0" newVersion="2.1.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.5.0.0" newVersion="5.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.5.0.0" newVersion="5.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.5.0.0" newVersion="5.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    
    
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
         to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
     -->
  <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). --><legacyHMACWarning enabled="0" /><!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 --></runtime>
  <spring>
    <context>
      <resource uri="config://spring/objects" />
    </context>
    <typeAliases>
      <alias name="Building" type="Bespoke.SphCommercialSpaces.Domain.Building, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Contract" type="Bespoke.SphCommercialSpaces.Domain.Contract, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="ContractTemplate" type="Bespoke.SphCommercialSpaces.Domain.ContractTemplate, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="CommercialSpace" type="Bespoke.SphCommercialSpaces.Domain.CommercialSpace, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Complaint" type="Bespoke.SphCommercialSpaces.Domain.Complaint, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="ComplaintTemplate" type="Bespoke.SphCommercialSpaces.Domain.ComplaintTemplate, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Deposit" type="Bespoke.SphCommercialSpaces.Domain.Deposit, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Designation" type="Bespoke.SphCommercialSpaces.Domain.Designation, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Invoice" type="Bespoke.SphCommercialSpaces.Domain.Invoice, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Inventory" type="Bespoke.SphCommercialSpaces.Domain.Inventory, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Maintenance" type="Bespoke.SphCommercialSpaces.Domain.Maintenance, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Payment" type="Bespoke.SphCommercialSpaces.Domain.Payment, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Rebate" type="Bespoke.SphCommercialSpaces.Domain.Rebate, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="RentalApplication" type="Bespoke.SphCommercialSpaces.Domain.RentalApplication, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Rent" type="Bespoke.SphCommercialSpaces.Domain.Rent, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="SpatialStore" type="Bespoke.SphCommercialSpaces.Domain.SpatialStore, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Setting" type="Bespoke.SphCommercialSpaces.Domain.Setting, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Tenant" type="Bespoke.SphCommercialSpaces.Domain.Tenant, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="UserProfile" type="Bespoke.SphCommercialSpaces.Domain.UserProfile, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
      <alias name="Watcher" type="Bespoke.SphCommercialSpaces.Domain.Watcher, domain.commercialspace, Version=1.0.2.1006, Culture=neutral" />
    </typeAliases>
    <objects>
      <object name="IPersistence" type="Bespoke.Sph.SqlRepository.SqlPersistence, sql.repository">
        <constructor-arg name="connectionString" value="data source=.\katmai;initial catalog=Sph;integrated security=True;MultipleActiveResultSets=True;Application Name=sph.cs.web" />
      </object>
      <object name="IBrokerConnection" type="Bespoke.Sph.RabbitMqPublisher.DefaultBrokerConnection, rabbitmq.changepublisher, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <property name="Port" value="5672" />
        <property name="Password" value="guest" />
        <property name="Username" value="guest" />
        <property name="Host" value="localhost" />
        <property name="VirtualHost" value="sph.0009" />
      </object>
      <object name="IEntityChangePublisher" type="Bespoke.Sph.Commerspace.Web.Dependencies.DummyChangeTracker, web.sph.commercial-space, Version=1.0.0.0, Culture=neutral">
	  </object>
      <object name="IDocumentGenerator" type="Bespoke.Sph.WordGenerator.WordGenerator, word.document.generator">
        <property name="DefaultNamespace" value="Bespoke.SphCommercialSpaces.Domain" />
      </object>
      <object name="IBinaryStore" type="Bespoke.Sph.SqlRepository.SqlBinaryStore, sql.repository" />
      <object name="ISpatialService&lt;SpatialStore&gt;" type="Bespoke.Sph.SqlRepository.SqlSpatial&lt;SpatialStore&gt;, sql.repository" />
      <object name="ISpatialService&lt;Building&gt;" type="Bespoke.Sph.SqlRepository.SqlSpatial&lt;Building&gt;, sql.repository" />
      <object name="IRepository&lt;Building&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Building&gt;, sql.repository" />
      <object name="IRepository&lt;Contract&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Contract&gt;, sql.repository" />
      <object name="IRepository&lt;ContractTemplate&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;ContractTemplate&gt;, sql.repository" />
      <object name="IRepository&lt;CommercialSpace&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;CommercialSpace&gt;, sql.repository" />
      <object name="IRepository&lt;ComplaintTemplate&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;ComplaintTemplate&gt;, sql.repository" />
      <object name="IRepository&lt;Complaint&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Complaint&gt;, sql.repository" />
      <object name="IRepository&lt;Deposit&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Deposit&gt;, sql.repository" />
      <object name="IRepository&lt;Designation&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Designation&gt;, sql.repository" />
      <object name="IRepository&lt;Invoice&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Invoice&gt;, sql.repository" />
      <object name="IRepository&lt;Inventory&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Inventory&gt;, sql.repository" />
      <object name="IRepository&lt;Maintenance&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Maintenance&gt;, sql.repository" />
      <object name="IRepository&lt;Payment&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Payment&gt;, sql.repository" />
      <object name="IRepository&lt;Rent&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Rent&gt;, sql.repository" />
      <object name="IRepository&lt;Rebate&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Rebate&gt;, sql.repository" />
      <object name="IRepository&lt;RentalApplication&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;RentalApplication&gt;, sql.repository" />
      <object name="IRepository&lt;SpatialStore&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;SpatialStore&gt;, sql.repository" />
      <object name="IRepository&lt;Setting&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Setting&gt;, sql.repository" />
      <object name="IRepository&lt;Tenant&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Tenant&gt;, sql.repository" />
      <object name="IRepository&lt;UserProfile&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;UserProfile&gt;, sql.repository" />
      <object name="IRepository&lt;Watcher&gt;" type="Bespoke.Sph.SqlRepository.SqlRepository&lt;Watcher&gt;, sql.repository" />
      <object name="QueryProvider" type="Bespoke.Sph.SqlRepository.SqlQueryProvider, sql.repository" />
      <object name="IPagingTranslator" type="Bespoke.Sph.SqlRepository.Sql2008PagingTranslator, sql.repository" />
      <object name="ISqlServerMetadata" type="Bespoke.Sph.SqlRepository.SqlServer2012Metadata, sql.repository" />
      <object name="ILedgerExport" type="Bespoke.SphCommercialSpace.LedgerMsxl.ExcelEppExport, ledger.msxl" />
      <object name="INotificationService" type="Bespoke.Sph.Commerspace.Web.Dependencies.EmailService, web.sph.commercial-space, Culture=neutral" />
      <object name="IPagingTranslator2" type="Bespoke.Sph.Commerspace.Web.Api.Sql2008PagingTranslator, web.sph.commercial-space, Culture=neutral" />
      <object name="ITemplateEngine" type="Bespoke.Sph.Commerspace.Web.Mocks.TemplateEngine, web.sph.commercial-space, Culture=neutral" />
      <object name="ISearchProvider" type="Bespoke.Sph.Searching.LuceneSearchProvider, lucene.search">
        <constructor-arg name="directory" value="c:\temp\sph.index" />
      </object>
    
    </objects>
  </spring>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.net>
    <mailSettings>
      <smtp deliveryMethod="SpecifiedPickupDirectory">
        <specifiedPickupDirectory pickupDirectoryLocation="c:\temp\sphEmail" />
      </smtp>
    </mailSettings>
    
    
  <defaultProxy enabled="true" /><settings><!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. --><!--<servicePointManager checkCertificateRevocationList="true"/>--></settings></system.net>
  
  
<dotNetOpenAuth><messaging><untrustedWebRequest><whitelistHosts><!-- Uncomment to enable communication with localhost (should generally not activate in production!) --><!--<add name="localhost" />--></whitelistHosts></untrustedWebRequest></messaging><!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. --><reporting enabled="true" /><!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid><relyingParty><security requireSsl="false"><!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. --><!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>--></security><behaviors><!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). --><add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" /></behaviors></relyingParty></openid></dotNetOpenAuth><uri><!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. --><idn enabled="All" /><iriParsing enabled="true" /></uri></configuration>
