@model dynamic

@{
    Layout =null;
    
}

<script type="text/javascript" data-script="true">
    define(['services/datacontext','config'], function (context,config) {
        var isBusy = ko.observable(false),
            activate = function() {
                var maintenanceQuery = String.format("MaintenanceId gt 0");
                var officerQuery = String.format("Designation eq 'Petugas'");
                var tcs = new $.Deferred();
                var maintenanceTask = context.loadAsync("Maintenance", maintenanceQuery);
                var officerTask = context.getTuplesAsync("UserProfile", officerQuery, 'Username', 'FullName');
                $.when(maintenanceTask,officerTask).then(function(mLo,oLo) {
                    isBusy(false);
                    var maintenances = mLo.itemCollection;
                    vm.maintenances(maintenances);
                    vm.officerOptions(oLo);
                    tcs.resolve(true);
                });
                return tcs.promise();
            },            
            viewAttached = function() {

                $('#status-option').on('click', 'a', function (e) {
                    var status = ko.dataFor(this);
                    vm.selectedStatus(status);
                });
               
            };


    var vm = {
        activate: activate,
        viewAttached: viewAttached,
        maintenances: ko.observableArray(),
        profile : config.profile,   
        selectedStatus: ko.observable(),
            
        officerOptions : ko.observableArray(),
        statusOptions: ko.observableArray(['New', 'Inspection', 'Maintenance']),
        
    };

    vm.selectedStatus.subscribe(function(status) {
        var query = String.format("Status eq '{0}'", status);
        var tcs = new $.Deferred();

        context.loadAsync("Maintenance", query)
            .then(function(lo) {
                isBusy(false);
                vm.maintenances(lo.itemCollection);
                tcs.resolve(true);
            });
        return tcs.promise();

    });

    return vm;
    });
</script>
