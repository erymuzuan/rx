@model Bespoke.Sph.Domain.EntityLookupElement
@{
    if (string.IsNullOrWhiteSpace(Model.Enable))
    {
        Model.Enable = "true";
    }
    var guid = Guid.NewGuid().ToString();
    const string required = "required";
    if (null == Model.InputColMd)
    {
        Model.InputColMd = 7;
    }
}


@if (Model.IsCompact)
{

    <input @required class="@(Model.CssClass + " form-control " + Model.Size)" title="@Model.Tooltip"
           data-bind="@(Html.Raw(Model.GetKnockoutBindingExpression()))"
           id="@Model.ElementId" type="text" name="@Model.Path" />
}
else
{
    <div data-bind="visible:@Model.Visible" class="form-group">
        <label for="@Model.ElementId" class="@Model.LabelCssClass">@Model.Label</label>
        <div class="@Model.InputPanelCssClass">
            <input @required class="@(Model.CssClass + " form-control " + Model.Size)" title="@Model.Tooltip"
                             data-bind="@(Html.Raw(Model.GetKnockoutBindingExpression()))"
                             id="@Model.ElementId" type="text" name="@Model.Path" />
        </div>
        <div class="col-md-1">
            <a href="#">
                <i class="fa fa-search"></i>
            </a>
        </div>
        @if (!string.IsNullOrWhiteSpace(Model.HelpText))
        {
            <span class="help-block">@Model.HelpText</span>
        }
    </div>

}