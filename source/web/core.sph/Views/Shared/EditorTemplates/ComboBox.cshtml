@using Bespoke.Sph.Domain
@model Bespoke.Sph.Domain.ComboBox
@{
    var required = Model.IsRequired ? "required" : null;
    var originalPath = Model.Path.ToEmptyString().Replace("().", ".");
    if (string.IsNullOrWhiteSpace(Model.Enable))
    {
        Model.Enable = "true";
    }
}

@if (Model.IsCompact)
{
    <select @required data-bind="@(Html.Raw(Model.GetKnockoutBindingExpression()))" id="@Model.ElementId" name="@originalPath" class="@(Model.CssClass + " "+ Model.Size) form-control">
        @foreach (var op in Model.ComboBoxItemCollection)
        {
            <option value="@op.Value" data-i18n="@op.Caption">@op.Caption</option>
        }
    </select>
}
else
{

    <div class="form-group" data-bind="visible:@Model.Visible">
        <label data-i18n="@Model.Label" for="@Model.ElementId" class="@Model.LabelCssClass">@Model.Label</label>
        <div class="@Model.InputPanelCssClass">
            <select @required data-bind="@(Html.Raw(Model.GetKnockoutBindingExpression()))" id="@Model.ElementId" name="@originalPath" class="@(Model.CssClass + " "+ Model.Size) form-control">
                @foreach (var op in Model.ComboBoxItemCollection)
                {
                    <option value="@op.Value" data-i18n="@op.Caption">@op.Caption</option>
                }
            </select>
        </div>
    </div>
}
