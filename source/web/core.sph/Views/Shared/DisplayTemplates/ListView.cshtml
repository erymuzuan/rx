@using System.Web.Mvc.Html
@model Bespoke.Sph.Domain.ListView


<div data-bind="visible:@Html.Raw(Model.Visible)">
    <span> @Model.Label</span>
    <table class="table table-condensed table-striped">
        <thead>
            <tr>
                @foreach (var col in Model.ListViewColumnCollection)
                {
                    <th>@col.Label</th>
                }
            </tr>
        </thead>
        <tbody data-bind="foreach :@Model.Path">
            <tr>
                @foreach (var col in Model.ListViewColumnCollection)
                {
                    var col1 = col;
                    col.Input.Path = col.Path;
                    col.Input.Visible = "true";
                    col.Input.Enable = "true";
                    col.Input.IsCompact = true;
                    col.Input.ElementId = Guid.NewGuid().ToString();

                    var download = col.Input as Bespoke.Sph.Domain.DownloadLink;
                    if (null != download)
                    {
                        var pathd = $"'/sph/binarystore/get/' + {download.Path}()";
                        if (download.IsTransformTemplate)
                        {
                            pathd = $"'/sph/documenttemplate/transform?entity={download.Entity}&templateId={download.TemplateId}&id=' + {download.Path}()";
                        }
                        <td>
                            <a data-bind="attr : {'href':@Html.Raw(pathd)}" download>
                                @download.Label
                            </a>
                        </td>
                        continue;
                    }
                    var image = col.Input as Bespoke.Sph.Domain.ImageElement;
                    if (null != image)
                    {
                        var path = $"'/sph/image/store/' + {image.Path}()";
                        <td>
                            <img alt="@image.Label" title="@image.Tooltip" width="@image.Width" height="@image.Height" data-bind="attr : {'src':@Html.Raw(path)}, visible:@Html.Raw(image.Visible)" />
                        </td>
                        continue;
                    }
                    var checkbox = col.Input as Bespoke.Sph.Domain.CheckBox;
                    if (null != checkbox)
                    {
                        <td>
                            <input type="checkbox" />
                        </td>
                        continue;
                    }
                    var button = col.Input as Bespoke.Sph.Domain.Button;
                    if (null != button)
                    {
                        <td>
                           <button>@button.Label</button>
                        </td>
                        continue;
                    }

                    <td data-bind="text:@col.Path"></td>
                }

            </tr>
        </tbody>
    </table>
</div>
