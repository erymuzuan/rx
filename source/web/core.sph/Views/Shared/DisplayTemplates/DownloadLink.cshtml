@model Bespoke.Sph.Domain.DownloadLink
@if (string.IsNullOrWhiteSpace(Model.Enable))
{
    Model.Enable = "true";
}
@{
    var path = string.Format("'/sph/binarystore/get/' + {0}()", Model.Path);
    if (Model.IsTransformTemplate)
    {
        path = string.Format("'/sph/documenttemplate/transform?entity={0}&templateId={1}&id=' + {2}()", Model.Entity, Model.TemplateId, Model.Path);
    }
}

@if (Model.IsCompact)
{
    <a data-bind="attr : {'href':@Html.Raw(path)}, visible:@Model.Visible" download>
        @Model.Label
    </a>
}
else
{

    <div class="form-group" data-bind="visible:@Html.Raw(Model.Visible)">
        <label for="@Model.ElementId" class=""></label>
        <div class="@Model.InputPanelCssClass">
            <a id="@Model.ElementId" data-bind="attr : {'href':@Html.Raw(path)}, visible:@Model.Visible" download>
                @Model.Label
            </a>
        </div>
    </div>
}

