#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    
    #line 1 "..\..\Areas\Sph\Views\Editor\File.cshtml"
    using System.Configuration;
    
    #line default
    #line hidden
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    
    #line 2 "..\..\Areas\Sph\Views\Editor\File.cshtml"
    using System.Web.Mvc.Html;
    
    #line default
    #line hidden
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Sph/Views/Editor/File.cshtml")]
    public partial class _Areas_Sph_Views_Editor_File_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Areas_Sph_Views_Editor_File_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Areas\Sph\Views\Editor\File.cshtml"
  
    Layout = null;
    var theme = ConfigurationManager.AppSettings["sph:AceTheme"] ?? "crimson_editor";
    var fontSize = ConfigurationManager.AppSettings["sph:AceFontSize"] ?? "18";
    var mode = Model.Mode;


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html");

WriteLiteral(" lang=\"en\"");

WriteLiteral(">\r\n<head>\r\n    <meta");

WriteLiteral(" charset=\"UTF-8\"");

WriteLiteral(">\r\n    <meta");

WriteLiteral(" http-equiv=\"X-UA-Compatible\"");

WriteLiteral(" content=\"IE=edge,chrome=1\"");

WriteLiteral(">\r\n    <title>Editor</title>\r\n    <link");

WriteLiteral(" href=\"/Content/external/bootstrap.min.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n    <link");

WriteLiteral(" href=\"/Content/external/font-awesome.min.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n    <style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" media=\"screen\"");

WriteLiteral(@">
        body {
            overflow: hidden;
        }

        #editor {
            margin: 0;
            margin-top: 50px;
            position: absolute;
            top: 0;
            bottom: 20px;
            left: 0;
            right: 0;
            font-size: ");

            
            #line 34 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                   Write(fontSize);

            
            #line default
            #line hidden
WriteLiteral("px;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n");

WriteLiteral("    ");

            
            #line 39 "..\..\Areas\Sph\Views\Editor\File.cshtml"
Write(Html.Partial("_Toolbar"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <pre");

WriteLiteral(" id=\"editor\"");

WriteLiteral(">\r\n// PLEASE WAIT WHILE YOUR SCRIPT IS LOADING\r\n</pre>\r\n");

WriteLiteral("    ");

            
            #line 43 "..\..\Areas\Sph\Views\Editor\File.cshtml"
Write(Html.Partial("_VendorScripts"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">

        var bespoke = bespoke || {};
        bespoke.sph = bespoke.sph || {};
        bespoke.sph.domain = bespoke.sph.domain || {};


        require.config({
            baseUrl: ""/SphApp"",
            waitSeconds: 15,
            paths: {
                'durandal': '/Scripts/durandal',
                'plugins': '/Scripts/durandal/plugins'
            }
        });
    </script>

    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">

        require([], function (context, app) {
            ace.require(""ace/ext/language_tools"");
            var editor = ace.edit(""editor"");
            editor.setOptions({
                enableBasicAutocompletion: true,
                enableSnippets: true,
                enableLiveAutocompletion: false
            });
            editor.setTheme(""ace/theme/");

            
            #line 71 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                  Write(theme);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n\r\n            editor.getSession().setMode(\"ace/mode/");

            
            #line 73 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                             Write(mode);

            
            #line default
            #line hidden
WriteLiteral(@""");
            editor.gotoLine(1);

            editor.commands.addCommand({
                name: 'GotoLine',
                bindKey: { win: 'Ctrl-G', mac: 'Command-G' },
                exec: function () {
                    require(['viewmodels/ace.goto.line'], function (dialog) {
                        app.showModal(dialog)
                            .done(function (result) {
                                if (result === ""OK"") {
                                    editor.gotoLine(dialog.line());
                                }
                            });
                    });
                },
                readOnly: true
            });

            var isBusy = ko.observable(),
                save = function () {

                    var data = JSON.stringify({
                        file: '");

            
            #line 96 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                          Write(Model.File);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                        code: editor.getValue()\r\n                    });\r\n   " +
"                 isBusy(true);\r\n\r\n                    return $.ajax({\r\n         " +
"               type: \"POST\",\r\n                        data: data,\r\n             " +
"           url: \"/sph/editor/save\",\r\n                        contentType: \"appli" +
"cation/json; charset=utf-8\",\r\n                        dataType: \"json\",\r\n       " +
"                 error: function(){\r\n                            alert(\"error\");" +
"\r\n                        },\r\n                        success: function(){\r\n    " +
"                        isBusy(false);\r\n                        }\r\n             " +
"       });\r\n\r\n                },\r\n                saveAndClose = function () {\r\n" +
"\r\n                    save().done(function () {\r\n                        window." +
"close();\r\n                    });\r\n\r\n                },\r\n                copiedT" +
"ext = \"\",\r\n                copy = function () {\r\n                  copiedText = " +
" editor.getCopyText();\r\n                },\r\n                paste = function () " +
"{\r\n                    editor.getSession().insert(copiedText);\r\n                " +
"},\r\n                search = function () {\r\n\r\n                },\r\n              " +
"  open = function () {\r\n\r\n                },\r\n                gotoLine = functio" +
"n (number) {\r\n\r\n                },\r\n                vm = {\r\n                    " +
"paste: paste,\r\n                    searchText: ko.observable(),\r\n               " +
"     open: open,\r\n                    copy: copy,\r\n                    save: sav" +
"e,\r\n                    search: search,\r\n                    saveAndClose: saveA" +
"ndClose,\r\n                    gotoLine: gotoLine,\r\n                    snippets:" +
" ko.observableArray(),\r\n                    logs: ko.observableArray(),\r\n       " +
"             openSnippetEditor: function () {\r\n                        require([" +
"\'viewmodels/snippets.dialog\'], function (dialog) {\r\n                            " +
"app.showModal(dialog)\r\n                                .done(function () {\r\n\r\n  " +
"                              });\r\n                            setTimeout(functi" +
"on () {\r\n                                $(\'div.modal-backdrop\').remove();\r\n    " +
"                        }, 500);\r\n                        });\r\n                 " +
"   }\r\n\r\n                };\r\n            ko.applyBindings(vm, document.getElement" +
"ById(\'header-navbar\'));\r\n\r\n\r\n\r\n            $(\'#theme\').change(function () {\r\n   " +
"             editor.setTheme(\"ace/theme/\" + $(this).val());\r\n                $.p" +
"ost(\'/Editor/SaveSetting\', { \'ace-theme\': $(this).val() });\r\n            });\r\n  " +
"          $(\'#font-size\').change(function () {\r\n                $(\'#editor\').css" +
"(\"font-size\", $(this).val() + \"px\");\r\n                $.post(\'/Editor/SaveSettin" +
"g\', { \'ace-font-size\': $(this).val() });\r\n            });\r\n            $(\'#snipp" +
"ets-list\').on(\'click\', \'a\', function () {\r\n                var snp = ko.dataFor(" +
"this);\r\n                editor.insert(snp.code);\r\n            });\r\n\r\n           " +
" // let it run\r\n            $.get(\'/sph/editor/code?id=");

            
            #line 181 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                  Write(Model.File);

            
            #line default
            #line hidden
WriteLiteral("\').done(function (text) {\r\n                editor.setValue(text);\r\n              " +
"  editor.gotoLine(1);\r\n\r\n            });\r\n            editor.gotoLine(1);\r\n\r\n   " +
"         $.get(\'/sph/editor/snippets/");

            
            #line 188 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                   Write(mode);

            
            #line default
            #line hidden
WriteLiteral("\').done(function (snippets) {\r\n                vm.snippets(snippets);\r\n\r\n        " +
"        var snippetManager = ace.require(\"ace/snippets\").snippetManager;\r\n\r\n    " +
"            ace.config.loadModule(\"ace/snippets/");

            
            #line 193 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                               Write(mode);

            
            #line default
            #line hidden
WriteLiteral(@""", function (m) {
                    if (m) {
                        snippetManager.files.javascript = m;
                        m.snippets = snippetManager.parseSnippetFile(m.snippetText);

                        _(snippets).each(function (v) {
                            m.snippets.push({
                                content: v.code,
                                name: v.title,
                                tabTrigger: v.title
                            });
                        });

                        snippetManager.register(m.snippets, m.scope);
                    }
                });

            });





        });
    </script>

</body>
</html>
");

        }
    }
}
#pragma warning restore 1591
