#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bespoke.Sph.Web.Areas.Sph.Views.Editor
{
    using System;
    using System.Collections.Generic;
    
    #line 1 "..\..\Areas\Sph\Views\Editor\File.cshtml"
    using System.Configuration;
    
    #line default
    #line hidden
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    
    #line 2 "..\..\Areas\Sph\Views\Editor\File.cshtml"
    using System.Web.Mvc.Html;
    
    #line default
    #line hidden
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Sph/Views/Editor/File.cshtml")]
    public partial class File : System.Web.Mvc.WebViewPage<dynamic>
    {
        public File()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Areas\Sph\Views\Editor\File.cshtml"
  
    Layout = null;
    var theme = ConfigurationManager.AppSettings["sph:AceTheme"] ?? "crimson_editor";
    var fontSize = ConfigurationManager.AppSettings["sph:AceFontSize"] ?? "18";
    var mode = Model.Mode;


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html");

WriteLiteral(" lang=\"en\"");

WriteLiteral(">\r\n<head>\r\n    <meta");

WriteLiteral(" charset=\"UTF-8\"");

WriteLiteral(">\r\n    <meta");

WriteLiteral(" http-equiv=\"X-UA-Compatible\"");

WriteLiteral(" content=\"IE=edge,chrome=1\"");

WriteLiteral(">\r\n    <title>Editor</title>\r\n    <link");

WriteLiteral(" href=\"/Content/bootstrap.min.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n    <link");

WriteLiteral(" href=\"/Content/font-awesome.min.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n    <style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" media=\"screen\"");

WriteLiteral(@">
        body {
            overflow: hidden;
        }

        #editor {
            margin: 0;
            margin-top: 50px;
            position: absolute;
            top: 0;
            bottom: 20px;
            left: 0;
            right: 0;
            font-size: ");

            
            #line 34 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                   Write(fontSize);

            
            #line default
            #line hidden
WriteLiteral("px;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n");

WriteLiteral("    ");

            
            #line 39 "..\..\Areas\Sph\Views\Editor\File.cshtml"
Write(Html.Partial("_Toolbar"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <pre");

WriteLiteral(" id=\"editor\"");

WriteLiteral(">\r\n// PLEASE WAIT WHILE YOUR SCRIPT IS LOADING\r\n</pre>\r\n");

WriteLiteral("   ");

            
            #line 43 "..\..\Areas\Sph\Views\Editor\File.cshtml"
Write(Html.Partial("_VendorScripts"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">

        var bespoke = bespoke || {};
        bespoke.sph = bespoke.sph || {};
        bespoke.sph.domain = bespoke.sph.domain || {};


        require.config({
            baseUrl: ""/SphApp"",
            waitSeconds: 15,
            paths: {
                'durandal': '/Scripts/durandal',
                'plugins': '/Scripts/durandal/plugins'
            }
        });
        define('jquery', function () { return jQuery; });
        define('knockout', ko);
    </script>

    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">

        require(['services/datacontext', 'jquery', 'services/app'], function (context, jquery, app) {
            ace.require(""ace/ext/language_tools"");
            var editor = ace.edit(""editor"");
            editor.setOptions({
                enableBasicAutocompletion: true,
                enableSnippets: true,
                enableLiveAutocompletion: false
            });
            editor.setTheme(""ace/theme/");

            
            #line 73 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                  Write(theme);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n\r\n            editor.getSession().setMode(\"ace/mode/");

            
            #line 75 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                             Write(mode);

            
            #line default
            #line hidden
WriteLiteral(@""");
            editor.gotoLine(1);

            editor.commands.addCommand({
                name: 'GotoLine',
                bindKey: { win: 'Ctrl-G', mac: 'Command-G' },
                exec: function () {
                    require(['viewmodels/ace.goto.line'], function (dialog) {
                        app.showModal(dialog)
                            .done(function (result) {
                                if (result === ""OK"") {
                                    editor.gotoLine(dialog.line());
                                }
                            });
                    });
                },
                readOnly: true
            });

            var isBusy = ko.observable(),
                save = function () {

                var tcs = new $.Deferred();
                var data = JSON.stringify({
                    file: '");

            
            #line 99 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                      Write(Model.File);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                    code: editor.getValue()\r\n                });\r\n           " +
"     isBusy(true);\r\n\r\n                context.post(data, \"/sph/editor/save\")\r\n  " +
"                  .then(function (result) {\r\n                        isBusy(fals" +
"e);\r\n\r\n\r\n                        tcs.resolve(result);\r\n                    });\r\n" +
"                return tcs.promise();\r\n            },\r\n                saveAndCl" +
"ose = function () {\r\n\r\n                    save().done(function() {\r\n           " +
"             window.close();\r\n                    });\r\n\r\n                },\r\n   " +
"             copy = function () {\r\n\r\n                },\r\n                paste =" +
" function () {\r\n\r\n                }, search = function () {\r\n\r\n                }" +
",\r\n                open = function () {\r\n\r\n                },\r\n                g" +
"otoLine = function (number) {\r\n\r\n                },\r\n                vm = {\r\n   " +
"                 paste: paste,\r\n                    searchText: ko.observable()," +
"\r\n                    open: open,\r\n                    copy: copy,\r\n            " +
"        save: save,\r\n                    search: search,\r\n                    sa" +
"veAndClose: saveAndClose,\r\n                    gotoLine: gotoLine,\r\n            " +
"        snippets: ko.observableArray(),\r\n                    logs: ko.observable" +
"Array(),\r\n                    openSnippetEditor: function () {\r\n                " +
"        require([\'viewmodels/snippets.dialog\'], function (dialog) {\r\n           " +
"                 app.showModal(dialog)\r\n                                .done(fu" +
"nction () {\r\n\r\n                                });\r\n                            " +
"setTimeout(function () {\r\n                                $(\'div.modal-backdrop\'" +
").remove();\r\n                            }, 500);\r\n                        });\r\n" +
"                    }\r\n\r\n                };\r\n            ko.applyBindings(vm, do" +
"cument.getElementById(\'header-navbar\'));\r\n\r\n\r\n\r\n            $(\'#theme\').change(f" +
"unction () {\r\n                editor.setTheme(\"ace/theme/\" + $(this).val());\r\n  " +
"              $.post(\'/Editor/SaveSetting\', { \'ace-theme\': $(this).val() });\r\n  " +
"          });\r\n            $(\'#font-size\').change(function () {\r\n               " +
" $(\'#editor\').css(\"font-size\", $(this).val() + \"px\");\r\n                $.post(\'/" +
"Editor/SaveSetting\', { \'ace-font-size\': $(this).val() });\r\n            });\r\n    " +
"        $(\'#snippets-list\').on(\'click\', \'a\', function () {\r\n                var " +
"snp = ko.dataFor(this);\r\n                editor.insert(snp.code);\r\n            }" +
");\r\n\r\n            // let it run\r\n            $.get(\'/sph/editor/code?id=");

            
            #line 176 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                  Write(Model.File);

            
            #line default
            #line hidden
WriteLiteral("\').done(function (text) {\r\n                editor.setValue(text);\r\n              " +
"  editor.gotoLine(1);\r\n\r\n            });\r\n            editor.gotoLine(1);\r\n\r\n   " +
"         $.get(\'/sph/editor/snippets/");

            
            #line 183 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                   Write(mode);

            
            #line default
            #line hidden
WriteLiteral("\').done(function (snippets) {\r\n                vm.snippets(snippets);\r\n\r\n        " +
"        var snippetManager = ace.require(\"ace/snippets\").snippetManager;\r\n\r\n    " +
"            ace.config.loadModule(\"ace/snippets/");

            
            #line 188 "..\..\Areas\Sph\Views\Editor\File.cshtml"
                                               Write(mode);

            
            #line default
            #line hidden
WriteLiteral(@""", function (m) {
                    if (m) {
                        snippetManager.files.javascript = m;
                        m.snippets = snippetManager.parseSnippetFile(m.snippetText);

                        _(snippets).each(function (v) {
                            m.snippets.push({
                                content: v.code,
                                name: v.title,
                                tabTrigger: v.title
                            });
                        });

                        snippetManager.register(m.snippets, m.scope);
                    }
                });

            });





        });
    </script>

</body>
</html>
");

        }
    }
}
#pragma warning restore 1591
