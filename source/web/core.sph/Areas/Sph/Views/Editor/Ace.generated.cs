#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    
    #line 1 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
    using System.Configuration;
    
    #line default
    #line hidden
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    
    #line 2 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
    using System.Web.Mvc.Html;
    
    #line default
    #line hidden
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Sph/Views/Editor/Ace.cshtml")]
    public partial class _Areas_Sph_Views_Editor_Ace_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Areas_Sph_Views_Editor_Ace_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
  
    Layout = null;
    var theme = ConfigurationManager.AppSettings["sph:AceTheme"] ?? "crimson_editor";
    var fontSize = ConfigurationManager.AppSettings["sph:AceFontSize"] ?? "18";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html");

WriteLiteral(" lang=\"en\"");

WriteLiteral(">\r\n<head>\r\n    <meta");

WriteLiteral(" charset=\"UTF-8\"");

WriteLiteral(">\r\n    <meta");

WriteLiteral(" http-equiv=\"X-UA-Compatible\"");

WriteLiteral(" content=\"IE=edge,chrome=1\"");

WriteLiteral(">\r\n    <title>Editor</title>\r\n    <link");

WriteLiteral(" href=\"/Content/bootstrap.min.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n    <link");

WriteLiteral(" href=\"/Content/font-awesome.min.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n    <style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" media=\"screen\"");

WriteLiteral(@">
        body {
            overflow: hidden;
        }

        #editor {
            margin: 0;
            margin-top: 50px;
            position: absolute;
            top: 0;
            bottom: 20px;
            left: 0;
            right: 0;
            font-size: ");

            
            #line 32 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
                   Write(fontSize);

            
            #line default
            #line hidden
WriteLiteral("px;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n");

WriteLiteral("    ");

            
            #line 37 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
Write(Html.Partial("_Toolbar"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <pre");

WriteLiteral(" id=\"editor\"");

WriteLiteral(">\r\n// PLEASE WAIT WHILE YOUR SCRIPT IS LOADING\r\n</pre>\r\n");

WriteLiteral("    ");

            
            #line 41 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
Write(Html.Partial("_VendorScripts"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">

        var bespoke = bespoke || {};
        bespoke.sph = bespoke.sph || {};
        bespoke.sph.domain = bespoke.sph.domain || {};


        require.config({
            baseUrl: ""/SphApp"",
            waitSeconds: 15,
            paths: {
                'durandal': '/Scripts/durandal',
                'plugins': '/Scripts/durandal/plugins'
            }
        });
        define('jquery', function () { return jQuery; });
        define('knockout', ko);
    </script>

    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">

        require([], function () {
            ace.require(""ace/ext/language_tools"");
            var editor = ace.edit(""editor"");
            editor.setOptions({
                enableBasicAutocompletion: true,
                enableSnippets: true,
                enableLiveAutocompletion: false
            });
            editor.setTheme(""ace/theme/");

            
            #line 71 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
                                  Write(theme);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n");

            
            #line 72 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
            
            
            #line default
            #line hidden
            
            #line 72 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
              
            var mode = this.Request.QueryString["mode"] ?? "csharp";
        
            
            #line default
            #line hidden
WriteLiteral("\r\n            editor.getSession().setMode(\"ace/mode/");

            
            #line 75 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
                                             Write(mode);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n            editor.gotoLine(1);\r\n\r\n            editor.commands.addCommand({\r" +
"\n                name: \'GotoLine\',\r\n                bindKey: { win: \'Ctrl-G\', ma" +
"c: \'Command-G\' },\r\n                exec: function () {\r\n                    requ" +
"ire([\'viewmodels/ace.goto.line\'], function (dialog) {\r\n                        a" +
"pp.showModal(dialog)\r\n                            .done(function (result) {\r\n   " +
"                             if (result === \"OK\") {\r\n                           " +
"         editor.gotoLine(dialog.line());\r\n                                }\r\n   " +
"                         });\r\n                    });\r\n                },\r\n     " +
"           readOnly: true\r\n            });\r\n\r\n            var save = function ()" +
" {\r\n                if (window.saved)\r\n                    window.saved(editor.g" +
"etValue());\r\n\r\n            },\r\n                saveAndClose = function () {\r\n   " +
"                 if (window.saved)\r\n                        window.saved(editor." +
"getValue(), true);\r\n\r\n                },\r\n                copy = function () {\r\n" +
"\r\n                },\r\n                paste = function () {\r\n\r\n                }" +
", search = function () {\r\n\r\n                },\r\n                open = function(" +
") {\r\n                    \r\n                },\r\n                gotoLine = functi" +
"on (number) {\r\n\r\n                },\r\n                vm = {\r\n                   " +
" paste: paste,\r\n                    searchText: ko.observable(),\r\n              " +
"      open: open,\r\n                    copy: copy,\r\n                    save: sa" +
"ve,\r\n                    search: search,\r\n                    saveAndClose: save" +
"AndClose,\r\n                    gotoLine: gotoLine,\r\n                    snippets" +
": ko.observableArray(),\r\n                    logs: ko.observableArray(),\r\n      " +
"              openSnippetEditor: function () {\r\n                        require(" +
"[\'viewmodels/snippets.dialog\'], function (dialog) {\r\n                           " +
" app.showModal(dialog)\r\n                                .done(function () {\r\n\r\n " +
"                               });\r\n                            setTimeout(funct" +
"ion() {\r\n                                $(\'div.modal-backdrop\').remove();\r\n    " +
"                        }, 500);\r\n                        });\r\n                 " +
"   }\r\n\r\n                };\r\n            ko.applyBindings(vm, document.getElement" +
"ById(\'header-navbar\'));\r\n\r\n\r\n\r\n            $(\'#theme\').change(function () {\r\n   " +
"             editor.setTheme(\"ace/theme/\" + $(this).val());\r\n                $.p" +
"ost(\'/Editor/SaveSetting\', { \'ace-theme\': $(this).val() });\r\n            });\r\n  " +
"          $(\'#font-size\').change(function () {\r\n                $(\'#editor\').css" +
"(\"font-size\", $(this).val() + \"px\");\r\n                $.post(\'/Editor/SaveSettin" +
"g\', { \'ace-font-size\': $(this).val() });\r\n            });\r\n            $(\'#snipp" +
"ets-list\').on(\'click\',\'a\',function () {\r\n                var snp = ko.dataFor(th" +
"is);\r\n                editor.insert(snp.code);\r\n            });\r\n\r\n            /" +
"/ let it run\r\n            setTimeout(function () {\r\n                if (window.c" +
"ode) {\r\n                    editor.setValue(window.code);\r\n                }\r\n  " +
"              if (typeof window.field === \"object\") {\r\n                    edito" +
"r.setValue(window.field.Script());\r\n                }\r\n                editor.go" +
"toLine(1);\r\n\r\n            }, 600);\r\n            editor.gotoLine(1);\r\n\r\n         " +
"   $.get(\'/sph/editor/snippets/");

            
            #line 172 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
                                   Write(mode);

            
            #line default
            #line hidden
WriteLiteral("\').done(function (snippets) {\r\n                vm.snippets(snippets);\r\n\r\n        " +
"        var snippetManager = ace.require(\"ace/snippets\").snippetManager;\r\n\r\n    " +
"            ace.config.loadModule(\"ace/snippets/");

            
            #line 177 "..\..\Areas\Sph\Views\Editor\Ace.cshtml"
                                               Write(mode);

            
            #line default
            #line hidden
WriteLiteral(@""", function (m) {
                    if (m) {
                        snippetManager.files.javascript = m;
                        m.snippets = snippetManager.parseSnippetFile(m.snippetText);

                        _(snippets).each(function(v) {
                            m.snippets.push({
                                content: v.code,
                                name: v.title,
                                tabTrigger: v.title
                            });
                        });

                        snippetManager.register(m.snippets, m.scope);
                    }
                });

            });

       



        });
    </script>

</body>
</html>
");

        }
    }
}
#pragma warning restore 1591
