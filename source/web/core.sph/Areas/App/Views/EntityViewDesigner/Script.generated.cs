#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bespoke.Sph.Web.Areas.App.Views.EntityViewDesigner
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/App/Views/EntityViewDesigner/Script.cshtml")]
    public partial class Script : System.Web.Mvc.WebViewPage<Bespoke.Sph.Web.ViewModels.TemplateFormViewModel>
    {
        public Script()
        {
        }
        public override void Execute()
        {

WriteLiteral("\r\n");


            
            #line 3 "..\..\Areas\App\Views\EntityViewDesigner\Script.cshtml"
  
    Layout = null;


            
            #line default
            #line hidden
WriteLiteral("<script src=\"~/SphApp/objectbuilders.js\"></script>\r\n<script src=\"~/Scripts/knocko" +
"ut-3.1.0.debug.js\"></script>\r\n<script src=\"~/Scripts/knockout.mapping-latest.deb" +
"ug.js\"></script>\r\n<script src=\"~/SphApp/schemas/form.designer.g.js\"></script>\r\n\r" +
"\n<script type=\"text/javascript\" data-script=\"true\">\r\n\r\n    define([objectbuilder" +
"s.datacontext, objectbuilders.logger, objectbuilders.router, objectbuilders.syst" +
"em],\r\n        function (context, logger, router, system) {\r\n\r\n            var er" +
"rors = ko.observableArray(),\r\n                entity = ko.observable(new bespoke" +
".sph.domain.EntityDefinition()),\r\n                view = ko.observable(new bespo" +
"ke.sph.domain.EntityView({ WebId: system.guid() })),\r\n                activate =" +
" function (entityid, viewid) {\r\n\r\n\r\n                    var vid = parseInt(viewi" +
"d),\r\n                        id = parseInt(entityid),\r\n                        q" +
"uery = String.format(\"EntityDefinitionId eq {0}\", id),\r\n                        " +
"tcs = new $.Deferred();\r\n\r\n                    context.loadOneAsync(\"EntityDefin" +
"ition\", query)\r\n                        .done(function (b) {\r\n                  " +
"          entity(b);\r\n                            if (!vid) {\r\n                 " +
"               tcs.resolve(true);\r\n                            }\r\n\r\n            " +
"            });\r\n                    if (vid) {\r\n                        context" +
".loadOneAsync(\"EntityView\", \"EntityViewId eq \" + vid)\r\n                        ." +
"done(function (f) {\r\n\r\n                            view(f);\r\n                   " +
"         tcs.resolve(true);\r\n                        });\r\n                    } " +
"else {\r\n\r\n                        view(new bespoke.sph.domain.EntityView({ WebId" +
": system.guid() }));\r\n                        view().IconStoreId(\"sph-img-list\")" +
";\r\n\r\n                        view().Name.subscribe(function (v) {\r\n             " +
"               view().Route(v.toLowerCase().replace(/\\W+/g, \"-\"));\r\n\r\n          " +
"              });\r\n                    }\r\n                    view().EntityDefin" +
"itionId(id);\r\n\r\n                    return tcs.promise();\r\n\r\n                },\r" +
"\n                attached = function () {\r\n\r\n\r\n\r\n                },\r\n           " +
"     publish = function () {\r\n\r\n                    // get the sorted element\r\n " +
"                   var columns = _($(\'ul#column-design>li:not(:first):not(:last)" +
"\')).map(function (div) {\r\n                        return ko.dataFor(div);\r\n     " +
"               });\r\n                    view().ViewColumnCollection(columns);\r\n\r" +
"\n                    var tcs = new $.Deferred(),\r\n                        data =" +
" ko.mapping.toJSON(view);\r\n\r\n                    context.post(data, \"/Sph/Entity" +
"View/Publish\")\r\n                        .then(function (result) {\r\n             " +
"               if (result.success) {\r\n                                logger.inf" +
"o(result.message);\r\n                                view().EntityViewId(result.i" +
"d);\r\n                                errors.removeAll();\r\n                      " +
"          view().IsPublished(true);\r\n                            } else {\r\n     " +
"                           errors(result.Errors);\r\n                             " +
"   logger.error(\"There are errors in your entity, !!!\");\r\n                      " +
"      }\r\n\r\n                            tcs.resolve(result);\r\n                   " +
"     });\r\n                    return tcs.promise();\r\n                },\r\n       " +
"         save = function () {\r\n                    // get the sorted element\r\n  " +
"                  var columns = _($(\'ul#column-design>li:not(:first):not(:last)\'" +
")).map(function (div) {\r\n                        return ko.dataFor(div);\r\n      " +
"              });\r\n                    view().ViewColumnCollection(columns);\r\n\r\n" +
"                    var tcs = new $.Deferred(),\r\n                        data = " +
"ko.mapping.toJSON(view);\r\n\r\n                    context.post(data, \"/Sph/EntityV" +
"iew/Save\")\r\n                        .then(function (result) {\r\n                 " +
"           view().EntityViewId(result.id);\r\n                            tcs.reso" +
"lve(result);\r\n                        });\r\n                    return tcs.promis" +
"e();\r\n                },\r\n\r\n            depublishAsync = function () {\r\n\r\n      " +
"          var tcs = new $.Deferred(),\r\n                    data = ko.mapping.toJ" +
"SON(view);\r\n\r\n                context.post(data, \"/EntityView/Depublish\")\r\n     " +
"               .then(function (result) {\r\n                        if (result.suc" +
"cess) {\r\n                            view().IsPublished(false);\r\n               " +
"             logger.info(result.message);\r\n                            errors.re" +
"moveAll();\r\n                        } else {\r\n                            logger" +
".error(\"There are errors in your view, !!!\");\r\n                        }\r\n      " +
"                  tcs.resolve(result);\r\n                    });\r\n               " +
" return tcs.promise();\r\n            };\r\n\r\n            var vm = {\r\n              " +
"  errors: errors,\r\n                attached: attached,\r\n                activate" +
": activate,\r\n                view: view,\r\n                entity: entity,\r\n     " +
"           formsQuery: ko.computed(function () {\r\n                    return Str" +
"ing.format(\"EntityDefinitionId eq {0}\", entity().EntityDefinitionId());\r\n       " +
"         }),\r\n                toolbar: {\r\n                    commands: ko.obser" +
"vableArray([{\r\n                        caption: \'Clone\',\r\n                      " +
"  icon: \'fa fa-copy\',\r\n                        command: function () {\r\n         " +
"                   view().Name(view().Name() + \' Copy (1)\');\r\n                  " +
"          view().Route(\'\');\r\n                            view().EntityViewId(0);" +
"\r\n                            return Task.fromResult(0);\r\n                      " +
"  }\r\n                    },\r\n                    {\r\n                        capt" +
"ion: \'Publish\',\r\n                        icon: \'fa fa-sign-in\',\r\n               " +
"         command: publish,\r\n                        enable: ko.computed(function" +
" () {\r\n                            return view().EntityViewId() > 0;\r\n          " +
"              })\r\n                    },\r\n                    {\r\n               " +
"         caption: \'Depublish\',\r\n                        icon: \'fa fa-sign-out\',\r" +
"\n                        command: depublishAsync,\r\n                        enabl" +
"e: ko.computed(function () {\r\n                            return view().EntityVi" +
"ewId() > 0 && view().IsPublished();\r\n                        })\r\n               " +
"     }\r\n                    ]),\r\n                    saveCommand: save\r\n        " +
"        }\r\n            };\r\n\r\n            return vm;\r\n\r\n        });\r\n\r\n\r\n</script" +
">\r\n");


        }
    }
}
#pragma warning restore 1591
