#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bespoke.Sph.Web.Areas.App.Views.EntityViewDesigner
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/App/Views/EntityViewDesigner/Script.cshtml")]
    public partial class Script : System.Web.Mvc.WebViewPage<Bespoke.Sph.Web.ViewModels.TemplateFormViewModel>
    {
        public Script()
        {
        }
        public override void Execute()
        {

WriteLiteral("\n");


            
            #line 3 "..\..\Areas\App\Views\EntityViewDesigner\Script.cshtml"
  
    Layout = null;


            
            #line default
            #line hidden
WriteLiteral("<script src=\"~/SphApp/objectbuilders.js\"></script>\n<script src=\"~/Scripts/knockou" +
"t-3.1.0.debug.js\"></script>\n<script src=\"~/Scripts/knockout.mapping-latest.debug" +
".js\"></script>\n<script src=\"~/SphApp/schemas/form.designer.g.js\"></script>\n\n<scr" +
"ipt type=\"text/javascript\" data-script=\"true\">\n\n    define([objectbuilders.datac" +
"ontext, objectbuilders.logger, objectbuilders.router, objectbuilders.system],\n  " +
"      function (context, logger, router, system) {\n\n            var errors = ko." +
"observableArray(),\n                entity = ko.observable(new bespoke.sph.domain" +
".EntityDefinition()),\n                view = ko.observable(new bespoke.sph.domai" +
"n.EntityView({ WebId: system.guid() })),\n                activate = function (en" +
"tityid, viewid) {\n\n\n                    var vid = parseInt(viewid),\n            " +
"            id = parseInt(entityid),\n                        query = String.form" +
"at(\"EntityDefinitionId eq {0}\", id),\n                        tcs = new $.Deferre" +
"d();\n\n                    context.loadOneAsync(\"EntityDefinition\", query)\n      " +
"                  .done(function (b) {\n                            entity(b);\n  " +
"                          if (!vid) {\n                                tcs.resolv" +
"e(true);\n                            }\n\n                        });\n            " +
"        if (vid) {\n                        context.loadOneAsync(\"EntityView\", \"E" +
"ntityViewId eq \" + vid)\n                        .done(function (f) {\n\n          " +
"                  view(f);\n                            tcs.resolve(true);\n      " +
"                  });\n                    } else {\n\n                        view" +
"(new bespoke.sph.domain.EntityView({ WebId: system.guid() }));\n                 " +
"   }\n                    view().EntityDefinitionId(id);\n\n                    ret" +
"urn tcs.promise();\n\n                },\n                attached = function () {\n" +
"\n\n\n                },\n                publish = function () {\n\n                 " +
"   // get the sorted element\n                    var columns = _($(\'ul#column-de" +
"sign>li:not(:first)\')).map(function (div) {\n                        return ko.da" +
"taFor(div);\n                    });\n                    view().ViewColumnCollect" +
"ion(columns);\n\n                    var tcs = new $.Deferred(),\n                 " +
"       data = ko.mapping.toJSON(view);\n\n                    context.post(data, \"" +
"/Sph/EntityView/Publish\")\n                        .then(function (result) {\n    " +
"                        if (result.success) {\n                                lo" +
"gger.info(result.message);\n                                view().EntityViewId(r" +
"esult.id);\n                                errors.removeAll();\n                 " +
"           } else {\n                                errors(result.Errors);\n     " +
"                           logger.error(\"There are errors in your entity, !!!\");" +
"\n                            }\n\n                            tcs.resolve(result);" +
"\n                        });\n                    return tcs.promise();\n         " +
"       },\n                save = function () {\n                    // get the so" +
"rted element\n                    var columns = _($(\'ul#column-design>li:not(:fir" +
"st)\')).map(function (div) {\n                        return ko.dataFor(div);\n    " +
"                });\n                    view().ViewColumnCollection(columns);\n\n " +
"                   var tcs = new $.Deferred(),\n                        data = ko" +
".mapping.toJSON(view);\n\n                    context.post(data, \"/Sph/EntityView/" +
"Save\")\n                        .then(function (result) {\n                       " +
"     view().EntityViewId(result.id);\n                            tcs.resolve(res" +
"ult);\n                        });\n                    return tcs.promise();\n    " +
"            };\n\n            var vm = {\n                errors: errors,\n         " +
"       attached: attached,\n                activate: activate,\n                v" +
"iew: view,\n                entity: entity,\n                formsQuery: ko.comput" +
"ed(function () {\n                    return String.format(\"EntityDefinitionId eq" +
" {0}\", entity().EntityDefinitionId());\n                }),\n                toolb" +
"ar: {\n                    commands: ko.observableArray([{\n                      " +
"  caption: \'Clone\',\n                        icon: \'fa fa-copy\',\n                " +
"        command: function () {\n                            view().Name(view().Na" +
"me() + \' Copy (1)\');\n                            view().Route(\'\');\n             " +
"               view().EntityViewId(0);\n                            return Task.f" +
"romResult(0);\n                        }\n                    },\n                 " +
"   {\n                        caption: \'Publish\',\n                        icon: \'" +
"fa fa-sign-out\',\n                        command: publish,\n                     " +
"   enable: ko.computed(function () {\n                            return view().E" +
"ntityViewId() > 0;\n                        })\n                    }\n            " +
"        ]),\n                    saveCommand: save\n                }\n            " +
"};\n\n            return vm;\n\n        });\n\n\n</script>\n");


        }
    }
}
#pragma warning restore 1591
