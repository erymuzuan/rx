@model Bespoke.Sph.Web.ViewModels.TemplateFormViewModel

@{
    Layout = null;
}
<script src="~/SphApp/objectbuilders.js"></script>
<script src="~/Scripts/knockout-3.0.0.debug.js"></script>
<script src="~/Scripts/knockout.mapping-latest.debug.js"></script>
<script src="~/SphApp/schemas/form.designer.g.js"></script>

<script type="text/javascript" data-script="true">

    define([objectbuilders.datacontext, objectbuilders.logger, objectbuilders.router, objectbuilders.system],
        function (context, logger, router, system) {

            var entity = ko.observable(new bespoke.sph.domain.EntityDefinition()),
                view = ko.observable(new bespoke.sph.domain.EntityView({ WebId: system.guid() })),
                activate = function (entityid, viewid) {


                    var vid = parseInt(viewid),
                        id = parseInt(entityid),
                        query = String.format("EntityDefinitionId eq {0}", id),
                        tcs = new $.Deferred();

                    context.loadOneAsync("EntityDefinition", query)
                        .done(function (b) {
                            entity(b);
                            if (!vid) {
                                tcs.resolve(true);
                            }

                        });
                    if (vid) {
                        context.loadOneAsync("EntityView", "EntityViewId eq " + vid)
                        .done(function (f) {

                            view(f);
                            tcs.resolve(true);
                        });
                    } else {

                        view(new bespoke.sph.domain.EntityView({ WebId: system.guid() }));
                    }
                    view().EntityDefinitionId(id);

                    return tcs.promise();

                },
                attached = function () {



                },
                publish = function () {
                    var tcs = new $.Deferred(),
                        data = ko.mapping.toJSON(view);

                    context.post(data, "/Sph/EntityView/Publish")
                        .then(function (result) {
                            view().EntityViewId(result.id);
                            tcs.resolve(result);
                        });
                    return tcs.promise();
                },
                save = function () {
                    var tcs = new $.Deferred(),
                        data = ko.mapping.toJSON(view);

                    context.post(data, "/Sph/EntityView/Save")
                        .then(function (result) {
                            view().EntityViewId(result.id);
                            tcs.resolve(result);
                        });
                    return tcs.promise();
                };

            var vm = {
                attached: attached,
                activate: activate,
                view: view,
                entity: entity,
                toolbar: {
                    commands: ko.observableArray([{
                        caption: 'Publish',
                        icon: 'fa fa-folder-open-o',
                        command: publish
                    }
                    ]),
                    saveCommand: save
                }
            };

            return vm;

        });


</script>
