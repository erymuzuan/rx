@using Bespoke.Sph.Domain
@using System.Linq;
@model Bespoke.Sph.Web.ViewModels.TemplateFormViewModel


@{
    Type[] types = new Type[]
    {
                            typeof(TextBox),
                            typeof(ComboBox),
                            typeof(Button),
                            typeof(DownloadLink),
                            typeof(ImageElement),
                            typeof(ChildEntityListView),
                            typeof(EntityLookupElement),
                            typeof(FileUploadElement),
                            typeof(TabControl),
                            typeof(ListView)
                        };
}
@foreach (var type in types)
{
    var fe = Model.FormElements.Single(x => x.GetType() == type);
    var feName = "toolbox-advanced-settings-" + type.Name;
    var typeName = Strings.GetShortAssemblyQualifiedName(type);

                    <!--ko if: ko.unwrap($type) === "@typeName" -->
    <div class="form-group">


        <a href="#@(feName)" data-toggle="collapse">
            <i class="fa fa-chevron-down"></i>
            Advanced settings
        </a>
    </div>
    <div id="@feName" class="collapse">
        @{

            FormElement fe1 = fe;
            @Html.EditorFor(m => fe1)
        }
    </div>
                    <!-- /ko -->
}