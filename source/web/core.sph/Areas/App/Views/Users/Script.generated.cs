#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Bespoke.Sph.Web;
    
    #line 1 "..\..\Areas\App\Views\Users\Script.cshtml"
    using Newtonsoft.Json;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/App/Views/Users/Script.cshtml")]
    public partial class _Areas_App_Views_Users_Script_cshtml : System.Web.Mvc.WebViewPage<Bespoke.Sph.Web.Areas.Sph.Controllers.AdminController>
    {
        public _Areas_App_Views_Users_Script_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Areas\App\Views\Users\Script.cshtml"
  
    ViewBag.Title = "UsersJs";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var roles = Roles.GetAllRoles();


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" data-script=\"true\"");

WriteLiteral(">\r\n    define([objectbuilders.datacontext,\"viewmodels/_users.designation\",\'viewmo" +
"dels/_users.department\',\'services/logger\'], function (context,designationvm,depa" +
"rtmentvm,logger) {\r\n        var isBusy = ko.observable(false),\r\n            role" +
"s = ");

            
            #line 14 "..\..\Areas\App\Views\Users\Script.cshtml"
               Write(Html.Raw(JsonConvert.SerializeObject(roles)));

            
            #line default
            #line hidden
WriteLiteral(",\r\n            printprofile = ko.observable(new bespoke.sph.domain.Profile()),\r\n " +
"           profile = ko.observable(new bespoke.sph.domain.Profile()),\r\n         " +
"   profiles = ko.observableArray(),\r\n            departmentOptions = ko.observab" +
"leArray(),\r\n            designationOptions = ko.observableArray(),\r\n            " +
"userNameValidationStatus = ko.observable(\"\"),\r\n            passwordValidationSta" +
"tus = ko.observable(true),\r\n            emailValidationStatus = ko.observable(\"\"" +
"),\r\n            importedSecuritySettingStoreId = ko.observable(\"\"),\r\n           " +
" password1 = ko.observable(\"\"),\r\n            password2 = ko.observable(\"\"),\r\n   " +
"         isBusyValidatingUserName = ko.observable(false),\r\n            isBusyVal" +
"idatingEmail= ko.observable(false),\r\n            loadDetails = function() {\r\n   " +
"             designationvm.activate(roles);\r\n                departmentvm.activa" +
"te();\r\n            },\r\n            map = function(item) {\r\n                var p" +
" = new bespoke.sph.domain.Profile();\r\n                p.IsNew(false);\r\n         " +
"       p.FullName(item.FullName());\r\n                p.UserName(item.UserName())" +
";\r\n                p.Email(item.Email());\r\n                p.Designation(item.De" +
"signation());\r\n                p.Department(item.Department());\r\n               " +
" p.Telephone(item.Telephone());\r\n                return p;\r\n            },\r\n    " +
"        activate = function() {\r\n                var query = String.format(\"Id n" +
"e \'0\'\");\r\n                var tcs = new $.Deferred();\r\n                loadDetai" +
"ls();\r\n                var profileTask = context.loadAsync(\"UserProfile\", query)" +
";\r\n                var designationTask = context.getListAsync(\"Designation\",\"Id " +
"ne \'0\'\", \"Name\");\r\n                var departmentTask = context.loadOneAsync(\"Se" +
"tting\", \"Key eq \'Departments\'\");\r\n                $.when(designationTask,profile" +
"Task,departmentTask)\r\n                 .then(function(s,p,d) {\r\n                " +
"     isBusy(false);\r\n                     if (s) {\r\n                         des" +
"ignationOptions(s);\r\n                     }\r\n                     if (d) {\r\n    " +
"                     var departments = JSON.parse(ko.mapping.toJS(d.Value));;\r\n " +
"                        departmentOptions(departments);\r\n                     }\r" +
"\n                     var list = _(p.itemCollection).map(map);\r\n                " +
"     profiles(list);\r\n\r\n                     tcs.resolve(true);\r\n               " +
"  });\r\n                return tcs.promise();\r\n            },\r\n            userNa" +
"meChaged = function(userName) {\r\n                isBusyValidatingUserName(true);" +
"\r\n                var tcs = new $.Deferred();\r\n                var data = JSON.s" +
"tringify({userName : userName});\r\n                isBusy(true);\r\n               " +
" context.post(data, \"/sph/Admin/ValidateUserName\")\r\n                    .then(fu" +
"nction(result) {\r\n                        isBusy(false);\r\n                      " +
"  isBusyValidatingUserName(false);\r\n                        if (result.status !=" +
"= \"OK\") {\r\n                            userNameValidationStatus(result.message);" +
"\r\n                        }\r\n\r\n                        tcs.resolve(result);\r\n   " +
"                 });\r\n                return tcs.promise();\r\n            },\r\n   " +
"         passwordChanged = function(pwd) {\r\n                var data = JSON.stri" +
"ngify({password : pwd});\r\n                return context.post(data, \"/sph/Admin/" +
"CheckPasswordComplexity\")\r\n                    .then(function(result) {\r\n       " +
"                 passwordValidationStatus(result);\r\n                    });\r\n   " +
"         },\r\n            emailChanged = function(email) {\r\n                isBus" +
"yValidatingEmail(true);\r\n                var tcs = new $.Deferred();\r\n          " +
"      var data = JSON.stringify({email : email});\r\n                isBusy(true);" +
"\r\n                context.post(data, \"/Sph/Admin/ValidateEmail\")\r\n              " +
"      .then(function(result) {\r\n                        isBusy(false);\r\n        " +
"                isBusyValidatingEmail(false);\r\n                        if (resul" +
"t.status !== \"OK\") {\r\n                            emailValidationStatus(result.m" +
"essage);\r\n                        }\r\n\r\n                        tcs.resolve(resul" +
"t);\r\n                    });\r\n                return tcs.promise();\r\n           " +
" },\r\n            add = function() {\r\n                profile(new bespoke.sph.dom" +
"ain.Profile());\r\n                profile().IsNew(true);\r\n                profile" +
"().UserName(\'\');\r\n                profile().Email.subscribe(emailChanged);\r\n    " +
"            profile().UserName.subscribe(userNameChaged);\r\n                profi" +
"le().Password.subscribe(passwordChanged);\r\n\r\n                $(\'#user-details-mo" +
"dal\').modal();\r\n            },\r\n            editedProfile = ko.observable(),\r\n  " +
"          edit = function(user) {\r\n                editedProfile(user);\r\n       " +
"         var c1 = ko.mapping.fromJSON(ko.mapping.toJSON(user));\r\n               " +
" var clone = c1;\r\n                profile(clone);\r\n            },\r\n            s" +
"ave = function() {\r\n                var data = ko.mapping.toJSON({profile : prof" +
"ile}) ;\r\n                isBusy(true);\r\n\r\n                return context.post(da" +
"ta, \"/sph/Admin/AddUser\")\r\n                    .then(function(result) {\r\n       " +
"                 isBusy(false);\r\n                        if (!result.success) {\r" +
"\n                            logger.error(result.message);\r\n                    " +
"        return;\r\n                        }\r\n                        var existing" +
" = _(profiles()).find(function(v) { return ko.unwrap(v.UserName) === ko.unwrap(r" +
"esult.UserName); });\r\n                        if (existing) {\r\n                 " +
"           profiles.replace(existing, result);\r\n                        } else {" +
"\r\n                            profiles.push(result);\r\n                        }\r" +
"\n                    });\r\n            },\r\n            resetPassword = function(u" +
"ser) {\r\n                password1(\'\');\r\n                password2(\'\');\r\n        " +
"        var c1 = ko.mapping.fromJSON(ko.mapping.toJSON(user));\r\n                " +
"var clone = c1;\r\n                profile(clone);\r\n            },\r\n            sa" +
"vePassword = function() {\r\n                if (!password1() && !password2()) {\r\n" +
"                    return Task.fromResult(false);\r\n                };\r\n        " +
"        if (password1() !== password2()) {\r\n                    logger.logError(" +
"\'Password mismatch\', this, this, true);\r\n                    return Task.fromRes" +
"ult(false);\r\n                }\r\n\r\n                var data = ko.mapping.toJSON({" +
"userName: profile().UserName(), password: password1}) ;\r\n                isBusy(" +
"true);\r\n\r\n                return context.post(data, \"/sph/Admin/ResetPassword\")\r" +
"\n                    .then(function(result) {\r\n                        isBusy(fa" +
"lse);\r\n                        if (result.OK) {\r\n                            log" +
"ger.info(result.messages);\r\n                        } else {\r\n                  " +
"          logger.logError(result.messages, this, this, true);\r\n                 " +
"       }\r\n                    });\r\n\r\n\r\n            },\r\n            exportCommand" +
" = function() {\r\n                window.open(\"/sph/admin/ExportSecuritySettings\"" +
");\r\n                return Task.fromResult(true);\r\n\r\n            };\r\n\r\n        i" +
"mportedSecuritySettingStoreId.subscribe(function(id) {\r\n            context.post" +
"(JSON.stringify({\"id\": id}), \"/sph/admin/import/\" + id)\r\n            .done(funct" +
"ion() {\r\n                logger.info(\"All the settings has been imported\");\r\n   " +
"             activate();\r\n            });\r\n        });\r\n\r\n        var vm = {\r\n  " +
"          importedSecuritySettingStoreId: importedSecuritySettingStoreId,\r\n     " +
"       activate: activate,\r\n            passwordValidationStatus : passwordValid" +
"ationStatus,\r\n            isBusyValidatingUserName : isBusyValidatingUserName,\r\n" +
"            isBusyValidatingEmail : isBusyValidatingEmail,\r\n            profiles" +
": profiles,\r\n            profile: profile,\r\n            printprofile : printprof" +
"ile,\r\n            designationOptions : designationOptions,\r\n            departme" +
"ntOptions : departmentOptions,\r\n            userNameValidationStatus : userNameV" +
"alidationStatus,\r\n            emailValidationStatus : emailValidationStatus,\r\n  " +
"          editCommand: edit,\r\n            saveCommand: save,\r\n            add: a" +
"dd,\r\n            password1: password1,\r\n            password2: password2,\r\n     " +
"       resetPasswordCommand: resetPassword,\r\n            savePasswordCommand: sa" +
"vePassword,\r\n            map: map,\r\n            searchTerm: {\r\n                d" +
"epartment:ko.observable(),\r\n                keyword: ko.observable()\r\n          " +
"  },\r\n            toolbar : ko.observable({\r\n                exportCommand : exp" +
"ortCommand,\r\n                reloadCommand: function () {\r\n                    r" +
"eturn activate();\r\n                },\r\n                printCommand: ko.observab" +
"le({\r\n                    entity: ko.observable(\"UserProfile\"),\r\n               " +
"     id: ko.observable(0),\r\n                    item: printprofile,\r\n           " +
"     })\r\n            })\r\n        };\r\n\r\n\r\n        return vm;\r\n\r\n\r\n    });\r\n</scri" +
"pt>\r\n");

        }
    }
}
#pragma warning restore 1591
