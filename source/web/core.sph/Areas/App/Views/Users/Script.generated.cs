#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Bespoke.Sph.Web;
    
    #line 1 "..\..\Areas\App\Views\Users\Script.cshtml"
    using Newtonsoft.Json;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/App/Views/Users/Script.cshtml")]
    public partial class _Areas_App_Views_Users_Script_cshtml : System.Web.Mvc.WebViewPage<Bespoke.Sph.Web.Areas.Sph.Controllers.AdminController>
    {
        public _Areas_App_Views_Users_Script_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Areas\App\Views\Users\Script.cshtml"
  
    ViewBag.Title = "UsersJs";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var roles = Roles.GetAllRoles();


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" data-script=\"true\"");

WriteLiteral(">\r\n    define([objectbuilders.datacontext,\"viewmodels/_users.designation\",\'viewmo" +
"dels/_users.department\',\'services/logger\'], function (context,designationvm,depa" +
"rtmentvm,logger) {\r\n        var isBusy = ko.observable(false),\r\n            role" +
"s = ");

            
            #line 14 "..\..\Areas\App\Views\Users\Script.cshtml"
               Write(Html.Raw(JsonConvert.SerializeObject(roles)));

            
            #line default
            #line hidden
WriteLiteral(",\r\n            printprofile = ko.observable(new bespoke.sph.domain.Profile()),\r\n " +
"           profile = ko.observable(new bespoke.sph.domain.Profile()),\r\n         " +
"   profiles = ko.observableArray(),\r\n            departmentOptions = ko.observab" +
"leArray(),\r\n            designationOptions = ko.observableArray(),\r\n            " +
"userNameValidationStatus = ko.observable(\"\"),\r\n            emailValidationStatus" +
" = ko.observable(\"\"),\r\n            importedSecuritySettingStoreId = ko.observabl" +
"e(\"\"),\r\n            password1 = ko.observable(\"\"),\r\n            password2 = ko.o" +
"bservable(\"\"),\r\n            isBusyValidatingUserName = ko.observable(false),\r\n  " +
"          isBusyValidatingEmail= ko.observable(false),\r\n            loadDetails " +
"= function() {\r\n                designationvm.activate(roles);\r\n                " +
"departmentvm.activate();\r\n            },\r\n            map = function(item) {\r\n  " +
"              var p = new bespoke.sph.domain.Profile();\r\n                p.IsNew" +
"(false);\r\n                p.FullName(item.FullName());\r\n                p.UserNa" +
"me(item.UserName());\r\n                p.Email(item.Email());\r\n                p." +
"Designation(item.Designation());\r\n                p.Department(item.Department()" +
");\r\n                p.Telephone(item.Telephone());\r\n                return p;\r\n " +
"           },\r\n            activate = function() {\r\n                var query = " +
"String.format(\"Id ne \'0\'\");\r\n                var tcs = new $.Deferred();\r\n      " +
"          loadDetails();\r\n                var profileTask = context.loadAsync(\"U" +
"serProfile\", query);\r\n                var designationTask = context.getListAsync" +
"(\"Designation\",\"Id ne \'0\'\", \"Name\");\r\n                var departmentTask = conte" +
"xt.loadOneAsync(\"Setting\", \"Key eq \'Departments\'\");\r\n                $.when(desi" +
"gnationTask,profileTask,departmentTask)\r\n                 .then(function(s,p,d) " +
"{\r\n                     isBusy(false);\r\n                     if (s) {\r\n         " +
"                designationOptions(s);\r\n                     }\r\n                " +
"     if (d) {\r\n                         var departments = JSON.parse(ko.mapping." +
"toJS(d.Value));;\r\n                         departmentOptions(departments);\r\n    " +
"                 }\r\n                     var list = _(p.itemCollection).map(map)" +
";\r\n                     profiles(list);\r\n\r\n                     tcs.resolve(true" +
");\r\n                 });\r\n                return tcs.promise();\r\n            },\r" +
"\n            userNameChaged = function(userName) {\r\n                isBusyValida" +
"tingUserName(true);\r\n                var tcs = new $.Deferred();\r\n              " +
"  var data = JSON.stringify({userName : userName});\r\n                isBusy(true" +
");\r\n                context.post(data, \"/Admin/ValidateUserName\")\r\n             " +
"       .then(function(result) {\r\n                        isBusy(false);\r\n       " +
"                 isBusyValidatingUserName(false);\r\n                        if (r" +
"esult.status !== \"OK\") {\r\n                            userNameValidationStatus(r" +
"esult.message);\r\n                        }\r\n\r\n                        tcs.resolv" +
"e(result);\r\n                    });\r\n                return tcs.promise();\r\n    " +
"        },\r\n            emailChanged = function(email) {\r\n                isBusy" +
"ValidatingEmail(true);\r\n                var tcs = new $.Deferred();\r\n           " +
"     var data = JSON.stringify({email : email});\r\n                isBusy(true);\r" +
"\n                context.post(data, \"/Admin/ValidateEmail\")\r\n                   " +
" .then(function(result) {\r\n                        isBusy(false);\r\n             " +
"           isBusyValidatingEmail(false);\r\n                        if (result.sta" +
"tus !== \"OK\") {\r\n                            emailValidationStatus(result.messag" +
"e);\r\n                        }\r\n\r\n                        tcs.resolve(result);\r\n" +
"                    });\r\n                return tcs.promise();\r\n            },\r\n" +
"            add = function() {\r\n                profile(new bespoke.sph.domain.P" +
"rofile());\r\n                profile().IsNew(true);\r\n                profile().Us" +
"erName(\'\');\r\n                profile().Email.subscribe(emailChanged);\r\n         " +
"       profile().UserName.subscribe(userNameChaged);\r\n\r\n                $(\'#user" +
"-details-modal\').modal();\r\n            },\r\n            editedProfile = ko.observ" +
"able(),\r\n            edit = function(user) {\r\n                editedProfile(user" +
");\r\n                var c1 = ko.mapping.fromJSON(ko.mapping.toJSON(user));\r\n    " +
"            var clone = c1;\r\n                profile(clone);\r\n            },\r\n  " +
"          save = function() {\r\n                var tcs = new $.Deferred();\r\n    " +
"            var data = ko.mapping.toJSON({profile : profile}) ;\r\n               " +
" isBusy(true);\r\n\r\n                context.post(data, \"/Admin/AddUser\")\r\n        " +
"            .then(function(result) {\r\n                        isBusy(false);\r\n  " +
"                      profiles.push(result);\r\n                        tcs.resolv" +
"e(true);\r\n                    });\r\n                return tcs.promise();\r\n      " +
"      },\r\n            resetPassword = function(user) {\r\n                password" +
"1(\'\');\r\n                password2(\'\');\r\n                var c1 = ko.mapping.from" +
"JSON(ko.mapping.toJSON(user));\r\n                var clone = c1;\r\n               " +
" profile(clone);\r\n            },\r\n            savePassword = function() {\r\n     " +
"           if (!password1() && !password2()) {\r\n                    return Task." +
"fromResult(false);\r\n                };\r\n                if (password1() !== pass" +
"word2()) {\r\n                    logger.logError(\'Password mismatch\', this, this," +
" true);\r\n                    return Task.fromResult(false);\r\n                }\r\n" +
"\r\n                var data = ko.mapping.toJSON({userName: profile().UserName(), " +
"password: password1}) ;\r\n                isBusy(true);\r\n\r\n                return" +
" context.post(data, \"/Admin/ResetPassword\")\r\n                    .then(function(" +
"result) {\r\n                        isBusy(false);\r\n                        if (r" +
"esult.OK) {\r\n                            logger.info(result.messages);\r\n        " +
"                } else {\r\n                            logger.logError(result.mes" +
"sages, this, this, true);\r\n                        }\r\n                    });\r\n\r" +
"\n\r\n            },\r\n            exportCommand = function() {\r\n                win" +
"dow.open(\"/sph/admin/ExportSecuritySettings\");\r\n                return Task.from" +
"Result(true);\r\n\r\n            };\r\n\r\n        importedSecuritySettingStoreId.subscr" +
"ibe(function(id) {\r\n            context.post(JSON.stringify({\"id\": id}), \"/sph/a" +
"dmin/import/\" + id)\r\n            .done(function() {\r\n                logger.info" +
"(\"All the settings has been imported\");\r\n                activate();\r\n          " +
"  });\r\n        });\r\n\r\n        var vm = {\r\n            importedSecuritySettingSto" +
"reId: importedSecuritySettingStoreId,\r\n            activate: activate,\r\n        " +
"    isBusyValidatingUserName : isBusyValidatingUserName,\r\n            isBusyVali" +
"datingEmail : isBusyValidatingEmail,\r\n            profiles: profiles,\r\n         " +
"   profile: profile,\r\n            printprofile : printprofile,\r\n            desi" +
"gnationOptions : designationOptions,\r\n            departmentOptions : department" +
"Options,\r\n            userNameValidationStatus : userNameValidationStatus,\r\n    " +
"        emailValidationStatus : emailValidationStatus,\r\n            editCommand:" +
" edit,\r\n            saveCommand: save,\r\n            add: add,\r\n            passw" +
"ord1: password1,\r\n            password2: password2,\r\n            resetPasswordCo" +
"mmand: resetPassword,\r\n            savePasswordCommand: savePassword,\r\n         " +
"   map: map,\r\n            searchTerm: {\r\n                department:ko.observabl" +
"e(),\r\n                keyword: ko.observable()\r\n            },\r\n            tool" +
"bar : ko.observable({\r\n                exportCommand : exportCommand,\r\n         " +
"       reloadCommand: function () {\r\n                    return activate();\r\n   " +
"             },\r\n                printCommand: ko.observable({\r\n                " +
"    entity: ko.observable(\"UserProfile\"),\r\n                    id: ko.observable" +
"(0),\r\n                    item: printprofile,\r\n                })\r\n            }" +
")\r\n        };\r\n\r\n\r\n        return vm;\r\n\r\n\r\n    });\r\n</script>\r\n");

        }
    }
}
#pragma warning restore 1591
