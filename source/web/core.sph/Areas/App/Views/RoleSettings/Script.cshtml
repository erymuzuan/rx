@model IEnumerable<Bespoke.Sph.Web.ViewModels.RoleModel>
@{
    Layout = null;
}

<h2>RoleSettingsJs</h2>
<script type="text/javascript" data-script="true">
    define(['services/datacontext', objectbuilders.logger],
        function (context, logger) {

            var activate = function (id) {
                if (id && id !== "0") {
                    var query = String.format("Id eq '{0}'", id);
                    var tcs = new $.Deferred();
                    context.loadOneAsync("Designation", query)
                        .done(function (b) {
                            vm.designation(b);
                            tcs.resolve(true);
                        });

                    return tcs.promise();

                } else {
                    vm.designation(new bespoke.sph.domain.Designation());
                }

                return true;

            },

            save = function () {
                var tcs = new $.Deferred();
                var data = ko.toJSON(vm.designation);

                context.post(data, "/sph-designation")
                    .then(function (result) {
                        tcs.resolve(result);
                        logger.info("Designation is successfully saved");
                    });
                return tcs.promise();
            },
               addRole = function () {


                   var tcs = new $.Deferred();

                   require(['viewmodels/role.dialog', 'durandal/app'], function (dialog, app2) {
                       app2.showDialog(dialog)
                           .done(function (result) {
                               if (!result) {
                                   tcs.resolve(false);
                                   return;
                               };
                               if (result === "OK") {
                                   var data = ko.mapping.toJSON(dialog.role);
                                   context.post(data, "/Sph/Admin/AddRole")
                                       .then(function (fw) {
                                           tcs.resolve(fw);
                                           logger.info("Refresh your browser to relect the changes");
                                       });
                               }
                           });

                   });
                   return tcs.promise();
               };

            var vm = {
                activate: activate,
                addRole: addRole,
                designation: ko.observable(),
                toolbar: { saveCommand: save }
            };

            return vm;


        });
</script>
