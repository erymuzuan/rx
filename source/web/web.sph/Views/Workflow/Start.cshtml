@using System.Web.Mvc.Html
@using Bespoke.Sph.Domain
@model Bespoke.Sph.Web.Controllers.WorkflowStartViewModel

@{
    ViewBag.Title = Model.WorkflowDefinition.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <h1>@Model.Screen.Title</h1>
</div>
<div class="row">
    <form class="form-horizontal" id="workflow-start-form">
        @foreach (var fe in Model.Screen.FormDesign.FormElementCollection)
        {
            fe.Path = fe.Path.ConvertJavascriptObjectToFunction();

            @Html.EditorFor(f => fe)
        }
        <div class="form-group" >
            <label class="control-label col-lg-2"></label>
            <div class="col-lg-2 col-lg-offset-8">
                <button id="save-button" type="submit" class="btn btn-default">Save</button>
            </div>
        </div>
    </form>

</div>


@section scripts
{
    <script type="text/javascript">
        require(['services/datacontext', 'jquery'], function(context) {
           var vm = {
                $type : "Bespoke.Sph.Domain.ScreenActivityViewModel,custom.workflow",
                id : @Model.WorkflowDefinition.WorkflowDefinitionId,
                @foreach (var v in Model.WorkflowDefinition.VariableDefinitionCollection)
                {
                    <text>
                @v.Name : @Html.Raw(v.GetEmptyJson(Model.WorkflowDefinition)),

                </text>
                }

                isBusy : ko.observable()
            };
            var ovm = context.toObservable(vm);
            ko.applyBindings(ovm);

            $('#save-button').click(function(e) {
                e.preventDefault();
                var tcs = new $.Deferred();
                var data = ko.mapping.toJSON(ovm);
                context.post(data, "/Workflow/StartWorkflow")
                    .then(function(result) {
                        tcs.resolve(result);
                    });
                return tcs.promise();
            });

        });

    </script>
}