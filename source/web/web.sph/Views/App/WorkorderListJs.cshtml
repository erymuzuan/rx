@using Newtonsoft.Json
@model dynamic

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var officer = User.Identity.Name;
}

<script type="text/javascript" data-script="true">
    define(['services/datacontext','config'], function (context,config) {
        var isBusy = ko.observable(false),
            officer = ko.observable(),
            activate = function () {
                officer(config.profile.Username);
                var query = String.format("Officer eq '{0}' " , officer());
                var tcs = new $.Deferred();
                context.loadAsync("Maintenance", query)
                    .then(function(lo) {
                        isBusy(false);
                        vm.maintenances(lo.itemCollection);
                        tcs.resolve(true);
                    });
                return tcs.promise();
            },
            viewAttached = function() {

                $('#status-option').on('click', 'a', function(e) {
                    var status = ko.dataFor(this);
                    vm.selectedStatus(status);
                });
            };

        var vm = {
            activate: activate,
            maintenances: ko.observableArray(),
            viewAttached: viewAttached,
            selectedStatus: ko.observable(),
            statusOptions: ko.observableArray(['Inspection','Maintenance','Completed']),
            officer : officer
            
        };

        vm.selectedStatus.subscribe(function(status) {
            var query = String.format("Status eq '{0}' and officer eq '{1}'", status, officer());
            var tcs = new $.Deferred();

            context.loadAsync("Maintenance", query)
                .then(function(lo) {
                    isBusy(false);
                    vm.maintenances(lo.itemCollection);
                    tcs.resolve(true);
                });
            return tcs.promise();
        });
        
        return vm;
    });
</script>
