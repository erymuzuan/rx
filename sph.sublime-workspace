{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Web",
				"WebId"
			],
			[
				"Save",
				"SaveAsync"
			],
			[
				"Htt",
				"HttpUnauthorizedResult"
			],
			[
				"Wa",
				"WaitingAsync"
			],
			[
				"Ac",
				"ActivityExecutionStatus"
			],
			[
				"Stat",
				"Status"
			]
		]
	},
	"buffers":
	[
		{
			"file": "bin/sources/Patient  test for property changed.cs",
			"settings":
			{
				"buffer_size": 2082,
				"line_ending": "Windows"
			}
		},
		{
			"file": "bin/sources/Customer.cs",
			"settings":
			{
				"buffer_size": 16840,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using Bespoke.Sph.Domain;\nusing System;\nusing System.Threading.Tasks;\nusing System.Linq;\nusing System.Xml.Serialization;\nusing System.Web.Mvc;\nusing Bespoke.Sph.Web.Helpers;\n\nnamespace Bespoke.Dev_0.Domain\n{\n   public class Customer : Entity\n   {\n       private int m_customerId;\n       [XmlAttribute]\n       public int CustomerId\n       {\n           get{ return m_customerId;}\n           set{ m_customerId = value;}\n       }\n       public Customer()\n       {\n           var rc = new RuleContext(this);\n\n           var mj1 = \"{\\\"$type\\\":\\\"Bespoke.Sph.Domain.ConstantField, domain.sph\\\",\\\"TypeName\\\":\\\"System.String, mscorlib\\\",\\\"Value\\\":\\\"<Name>\\\",\\\"Name\\\":null,\\\"Note\\\":null,\\\"WebId\\\":null}\";\n           var field1 = mj1.DeserializeFromJson<ConstantField>();\n           var val1 = field1.GetValue(rc);\n           m_name = (System.String)val1;\n\n           var mj2 = \"{\\\"$type\\\":\\\"Bespoke.Sph.Domain.ConstantField, domain.sph\\\",\\\"TypeName\\\":\\\"System.Int32, mscorlib\\\",\\\"Value\\\":1,\\\"Name\\\":null,\\\"Note\\\":null,\\\"WebId\\\":null}\";\n           var field2 = mj2.DeserializeFromJson<ConstantField>();\n           var val2 = field2.GetValue(rc);\n           m_rating = (System.Int32)val2;\n       }\n     \n        public override string ToString()\n        {\n            return \"Customer:\" + Name;\n        }     \n        public override void SetId(int id)\n        {\n            m_customerId = id;\n        }     \n        public override int GetId()\n        {\n            return m_customerId;\n        }\n//member:Name\n      private System.String m_name;\n      [XmlAttribute]\n      public System.String Name\n      {\n          get{ return m_name;}\n          set{ m_name = value;}\n      }\n\n//member:Title\n      private System.String m_title;\n      [XmlAttribute]\n      public System.String Title\n      {\n          get{ return m_title;}\n          set{ m_title = value;}\n      }\n\n//member:Rating\n      private System.Int32 m_rating;\n      [XmlAttribute]\n      public System.Int32 Rating\n      {\n          get{ return m_rating;}\n          set{ m_rating = value;}\n      }\n\n//member:Address\n      private Address m_address = new Address();\n      public Address Address\n      {\n          get{ return m_address;}\n          set{ m_address = value;}\n      }\n\n//member:ContactCollection\n      private readonly ObjectCollection<Contact> m_contactCollection = new ObjectCollection<Contact>();\n      public ObjectCollection<Contact> ContactCollection\n      {\n          get{ return m_contactCollection;}\n      }\n\n   }\n//class:Name\n\n//class:Title\n\n//class:Rating\n\n//class:Address\n   public class Address: DomainObject\n   {\n      private System.String m_street1;\n      [XmlAttribute]\n      public System.String Street1\n      {\n          get{ return m_street1;}\n          set{ m_street1 = value;}\n      }\n\n      private System.String m_state;\n      [XmlAttribute]\n      public System.String State\n      {\n          get{ return m_state;}\n          set{ m_state = value;}\n      }\n\n   }\n\n\n\n//class:ContactCollection\n   public class Contact: DomainObject\n   {\n      private System.String m_name;\n      [XmlAttribute]\n      public System.String Name\n      {\n          get{ return m_name;}\n          set{ m_name = value;}\n      }\n\n      private System.String m_telephone;\n      [XmlAttribute]\n      public System.String Telephone\n      {\n          get{ return m_telephone;}\n          set{ m_telephone = value;}\n      }\n\n   }\n\n\n\npublic partial class CustomerController : System.Web.Mvc.Controller\n{\n//exec:Search\n       public async Task<System.Web.Mvc.ActionResult> Search()\n       {\n\n            var json = Bespoke.Sph.Web.Helpers.ControllerHelpers.GetRequestBody(this);\n            var request = new System.Net.Http.StringContent(json);\n            var url = \"dev/customer/_search\";\n\n            using(var client = new System.Net.Http.HttpClient())\n            {\n                client.BaseAddress = new Uri(ConfigurationManager.ElasticSearchHost);\n                var response = await client.PostAsync(url, request);\n                var content = response.Content as System.Net.Http.StreamContent;\n                if (null == content) throw new Exception(\"Cannot execute query on es \" + request);\n                this.Response.ContentType = \"application/json; charset=utf-8\";\n                return Content(await content.ReadAsStringAsync());\n            }\n                   }\n//exec:Save\n       public async Task<System.Web.Mvc.ActionResult> Save([RequestBody]Customer item)\n       {\n\n            if(null == item) throw new ArgumentNullException(\"item\");\n            var context = new Bespoke.Sph.Domain.SphDataContext();\n            using(var session = context.OpenSession())\n            {\n                session.Attach(item);\n                await session.SubmitChanges(\"save\");\n            }\n            this.Response.ContentType = \"application/json; charset=utf-8\";\n            return Json(new {success = true, status=\"OK\", id = item.CustomerId});\n       }\n//exec:validate\n       [HttpPost]\n       public async Task<System.Web.Mvc.ActionResult> Validate(string id,[RequestBody]Customer item)\n       {\n           var context = new Bespoke.Sph.Domain.SphDataContext();\n           if(null == item) throw new ArgumentNullException(\"item\");\n           var ed = await context.LoadOneAsync<EntityDefinition>(d => d.Name == \"Customer\");\n           var brokenRules = new ObjectCollection<ValidationResult>();\n           var rules = id.Split(new char[]{','},StringSplitOptions.RemoveEmptyEntries);\n\n           foreach(var r in rules)\n           {\n                var appliedRules = ed.BusinessRuleCollection.Where(b => b.Name == r);\n                ValidationResult result = item.ValidateBusinessRule(appliedRules);\n\n                if(!result.Success){\n                    brokenRules.Add(result);\n                }\n           }\n           if( brokenRules.Count > 0) return Json(new {success = false, rules = brokenRules.ToArray()});\n\n   \n            return Json(new {success = true, status=\"OK\", id = item.CustomerId});\n       }\n//exec:Remove\n       [HttpDelete]\n       public async Task<System.Web.Mvc.ActionResult> Remove(int id)\n       {\n\n            var repos = ObjectBuilder.GetObject<IRepository<Customer>>();\n            var item = await repos.LoadOneAsync(id);\n            if(null == item)\n                return new HttpNotFoundResult();\n\n            var context = new Bespoke.Sph.Domain.SphDataContext();\n            using(var session = context.OpenSession())\n            {\n                session.Delete(item);\n                await session.SubmitChanges(\"delete\");\n            }\n            this.Response.ContentType = \"application/json; charset=utf-8\";\n            return Json(new {success = true, status=\"OK\", id = item.CustomerId});\n       }\n//exec:Schemas\n       public async Task<System.Web.Mvc.ActionResult> Schemas()\n       {\n           var context = new SphDataContext();\n           var ed = await context.LoadOneAsync<EntityDefinition>(t => t.Name == \"Customer\");\n           var script = await ed.GenerateCustomXsdJavascriptClassAsync();\n           this.Response.ContentType = \"application/javascript\";\n           return Content(script);\n       }\n}\n}\n\n\n",
			"settings":
			{
				"buffer_size": 7131,
				"line_ending": "Windows",
				"name": "using Bespoke.Sph.Domain;"
			}
		},
		{
			"contents": "<div class=\"btn-group\">\n\n    <a data-bind=\"with : ValueProvider, bootstrapDropDown : {}\" class=\"btn btn-link dropdown\" href=\"#\">\n        <img data-bind=\"fieldImage : $type\" class=\"pull-left\" alt=\".\" />\n        <!-- ko text : Name -->\n        <!-- /ko -->\n        <span class=\"caret\"></span>\n    </a>\n\n\n    <ul class=\"dropdown-menu\">\n        <li data-bind=\"with : ValueProvider\">\n            <a class=\"btn-add-setter-field\" data-bind=\"visible: Name() !== '+ Field',unwrapClick: $parent.editField.call($parent,$data)\">\n                <i class=\"fa fa-edit\"></i>\n                Edit Field\n            </a>\n        </li>\n        <li>\n            <a class=\"btn-add-document-setter-field\" data-bind=\"unwrapClick: addField,field : 'Document', accessor : $data.ValueProvider\" href=\"#\">+ Document Field</a>\n        </li>\n        <li>\n            <a class=\"btn-add-constant-setter-field\" data-bind=\"unwrapClick: addField,field : 'Constant', accessor : $data.ValueProvider\" href=\"#\">+ Constant Field</a>\n        </li>\n        <li>\n            <a class=\"btn-add-function-setter-field\" data-bind=\"unwrapClick: addField,field : 'Function', accessor : $data.ValueProvider\" href=\"#\">+ Function Field</a>\n        </li>\n\n    </ul>\n</div>",
			"settings":
			{
				"buffer_size": 1220,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 58.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/temp/offline/create-new-appointment.js",
		"/D/temp/offline/create-new-appointment.html",
		"/D/temp/offline/appointment-details.js",
		"/D/temp/offline/appointment.js",
		"/D/temp/offline/appointment-details.html",
		"/D/temp/offline/appointment.html",
		"/D/temp/offline/appointment.appcache",
		"/D/temp/offline/patient.html",
		"/C/Users/bespoke1/Desktop/LuceneBlogEngine.cs",
		"/D/project/work/cycling/source/web/web.cycling/Views/Shared/_LayoutPage.cshtml",
		"/C/Users/bespoke1/Documents/IISExpress/config/applicationhost.config",
		"/C/Users/bespoke1/AppData/Roaming/Microsoft/VisualStudio/12.0/ActivityLog.xml",
		"/C/project/work/sph/deployment/10282.md",
		"/C/project/work/sph/deployment/version.10284.json",
		"/C/project/work/sph/bin/sources/Patient.cs",
		"/D/temp/sph/version.json",
		"/D/temp/MiniBlog/Website/Web.config",
		"/C/project/work/sph/bin/web/docs/ParallelActivity.html",
		"/C/project/work/sph/restore-package.ps1",
		"/C/Users/bespoke1/Desktop/ddd.linq",
		"/C/project/work/sph/source/domain/domain.sph/Triggers/Activity.cs",
		"/C/project/work/sph/source/domain/domain.sph/Triggers/ScreenActivity.cs",
		"/C/project/work/sph/source/web/web.sph/SphApp/views/patient-details.html",
		"/C/project/work/sph/source/web/web.sph/SphApp/viewmodels/patient-details.js",
		"/C/project/work/sph/packages/Castle.Core.3.2.2/ASL - Apache Software Foundation License.txt",
		"/C/project/work/sph/source/web/web.sph/Controllers/WorkflowDefinitionController.cs",
		"/C/project/work/sph/source/web/web.sph/Views/Workflow/EditorTemplates/TextBox.cshtml",
		"/C/Users/itpro/AppData/Local/Temp/ipuuso0s.0.cs",
		"/D/temp/sph/Workflow_0_5.cs",
		"/D/temp/sph/Workflow_1_21.cs",
		"/D/temp/Workflow_1_5.cs",
		"/D/temp/Workflow_1_8.cs",
		"/D/temp/Workflow_1_13.cs",
		"/C/Users/bespoke1/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/bespoke1/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/bespoke1/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/project/work/sph/source/web/web.sph/App/partial/WorkflowDefinition.js",
		"/C/project/work/sph/source/web/web.sph/Views/Workflow/Start.cshtml"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"	AZROL	Resolved",
			"	Ruzzaima	Resolved",
			"	Ruzzaima	Closed",
			"	erymuzuan	Resolved",
			"	Shamsuriati Embi	Resolved",
			"cshtm",
			"col-lg",
			"this",
			"\n        public async override Task InitiateAsync(Workflow wf)\n        {\n          ",
			"indent",
			"tab",
			"<input.*class=\".*(form-control).*\"",
			"<input.*class=\".*^(?!.*?form-control).*\"",
			"<input.*class=\".*^(form-control).*\"",
			"<input.*class=\".*(form-control).*\"",
			"<input.*class=\".*form-control.*\"",
			"xxlarge",
			"<input.*form-control.*$",
			"<input.*?^f.*$",
			"<input class=\"input-xxlarge form-control\" data-bind=\"value: FiredOnOperations\" id=\"fired-on-operations\" type=\"text\" name=\"FireOnOperations\" />",
			"<input.*form-control.*$",
			"<input.*^(form-control)"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"col-md"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "bin/sources/Patient  test for property changed.cs",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2082,
						"regions":
						{
						},
						"selection":
						[
							[
								1061,
								1061
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "bin/sources/Customer.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16840,
						"regions":
						{
						},
						"selection":
						[
							[
								948,
								948
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 198.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7131,
						"regions":
						{
						},
						"selection":
						[
							[
								207,
								207
							]
						],
						"settings":
						{
							"auto_name": "using Bespoke.Sph.Domain;",
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 155.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1220,
						"regions":
						{
						},
						"selection":
						[
							[
								320,
								320
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 40.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "sph.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"patient.",
				"bin\\sources\\Patient.cs"
			],
			[
				"pa-de",
				"source\\web\\web.sph\\SphApp\\views\\patient-details.html"
			],
			[
				"screea",
				"source\\domain\\domain.sph\\Triggers\\ScreenActivity.cs"
			],
			[
				"acti",
				"source\\domain\\domain.sph\\Triggers\\Activity.cs"
			],
			[
				"worde.js",
				"web/web.sph/App/partial/WorkflowDefinition.js"
			],
			[
				"workdec",
				"web/web.sph/Controllers/WorkflowDefinitionController.cs"
			],
			[
				"start",
				"web/web.sph/Views/Workflow/Start.cshtml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 263.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
