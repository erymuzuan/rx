{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Web",
				"WebId"
			],
			[
				"Save",
				"SaveAsync"
			],
			[
				"Htt",
				"HttpUnauthorizedResult"
			],
			[
				"Wa",
				"WaitingAsync"
			],
			[
				"Ac",
				"ActivityExecutionStatus"
			],
			[
				"Stat",
				"Status"
			]
		]
	},
	"buffers":
	[
		{
			"file": "bin/sources/Patient.cs",
			"settings":
			{
				"buffer_size": 15109,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using Bespoke.Sph.Domain;\nusing System;\nusing System.Threading.Tasks;\nusing System.Linq;\nusing System.Xml.Serialization;\nusing System.Web.Mvc;\n\nnamespace Bespoke.Dev_0.Domain\n{\n   public class Customer : Entity\n   {\n   private int m_customerId;\n   public int CustomerId\n   {\n       get{ return m_customerId;}\n       set{ m_customerId = value;}\n   }\n     \n        public override string ToString()\n        {\n            return \"Customer:\" + ;\n        }//member:Name2\n          private System.String m_name2;\n   public System.String Name2\n   {\n       get{ return m_name2;}\n       set{ m_name2 = value;}\n   }\n\n//member:Title\n          private System.String m_title;\n   public System.String Title\n   {\n       get{ return m_title;}\n       set{ m_title = value;}\n   }\n\n//member:Address\n          private Address m_address = new Address();\n   public Address Address\n   {\n       get{ return m_address;}\n       set{ m_address = value;}\n   }\n\n//member:ContactCollection\n          private readonly ObjectCollection<Contact> m_contactCollection = new ObjectCollection<Contact>();\n   public ObjectCollection<Contact> ContactCollection\n   {\n       get{ return m_contactCollection;}\n   }\n\n   }\n//class:Name2\n\n//class:Title\n\n//class:Address\n   public class Address: DomainObject\n   {\n   private System.String m_street1;\n   public System.String Street1\n   {\n       get{ return m_street1;}\n       set{ m_street1 = value;}\n   }\n\n   private System.String m_state;\n   public System.String State\n   {\n       get{ return m_state;}\n       set{ m_state = value;}\n   }\n\n   }\n\n\n\n//class:ContactCollection\n   public class Contact: DomainObject\n   {\n   private System.String m_name;\n   public System.String Name\n   {\n       get{ return m_name;}\n       set{ m_name = value;}\n   }\n\n   private System.String m_telephone;\n   public System.String Telephone\n   {\n       get{ return m_telephone;}\n       set{ m_telephone = value;}\n   }\n\n   }\n\n\n\npublic partial class CustomerController : System.Web.Mvc.Controller\n{\n//exec:Search\n       public async Task<System.Web.Mvc.ActionResult> Search()\n       {\n\n            var json = Bespoke.Sph.Web.Helpers.ControllerHelpers.GetRequestBody(this);\n            var request = new System.Net.Http.StringContent(json);\n            var url = \"dev/customer/_search\";\n\n            using(var client = new System.Net.Http.HttpClient())\n            {\n                client.BaseAddress = new Uri(ConfigurationManager.ElasticSearchHost);\n                var response = await client.PostAsync(url, request);\n                var content = response.Content as System.Net.Http.StreamContent;\n                if (null == content) throw new Exception(\"Cannot execute query on es \" + request);\n                this.Response.ContentType = \"application/json; charset=utf-8\";\n                return Content(await content.ReadAsStringAsync());\n            }\n                   }\n//exec:Save\n       public async Task<System.Web.Mvc.ActionResult> Save()\n       {\n\n            var item = Bespoke.Sph.Web.Helpers.ControllerHelpers.GetRequestJson<Customer>(this);\n            var context = new Bespoke.Sph.Domain.SphDataContext();\n            using(var session = context.OpenSession())\n            {\n                session.Attach(item);\n                await session.SubmitChanges(\"save\");\n            }\n            this.Response.ContentType = \"application/json; charset=utf-8\";\n            return Json(new {success = true, status=\"OK\", id = item.CustomerId});\n       }\n       public Customer Item{get;set;}\n//exec:validate\n       [HttpPost]\n       public async Task<System.Web.Mvc.ActionResult> Validate(string id)\n       {\n           var context = new Bespoke.Sph.Domain.SphDataContext();\n           var item = Bespoke.Sph.Web.Helpers.ControllerHelpers.GetRequestJson<Customer>(this);\n           if(null == item) item = this.Item;\n           var ed = await context.LoadOneAsync<EntityDefinition>(d => d.Name == \"Customer\");\n           var brokenRules = new ObjectCollection<ValidationResult>();\n           var rules = id.Split(new char[]{','},StringSplitOptions.RemoveEmptyEntries);\n\n            foreach(var r in rules)\n            {\n                var appliedRules = ed.BusinessRuleCollection.Where(b => b.Name == r);\n                ValidationResult result = item.ValidateBusinessRule(appliedRules);\n\n                if(!result.Success){\n                    brokenRules.Add(result);\n                }\n            }\n           if( brokenRules.Count > 0) return Json(new {success = false, rules = brokenRules.ToArray()});\n\n   \n            return Json(new {success = true, status=\"OK\", id = item.CustomerId});\n       }\n//exec:Remove\n       [HttpDelete]\n       public async Task<System.Web.Mvc.ActionResult> Remove(int id)\n       {\n\n            var repos = ObjectBuilder.GetObject<IRepository<Customer>>();\n            var item = await repos.LoadOneAsync(id);\n            if(null == item)\n                return new HttpNotFoundResult();\n\n            var context = new Bespoke.Sph.Domain.SphDataContext();\n            using(var session = context.OpenSession())\n            {\n                session.Delete(item);\n                await session.SubmitChanges(\"delete\");\n            }\n            this.Response.ContentType = \"application/json; charset=utf-8\";\n            return Json(new {success = true, status=\"OK\", id = item.CustomerId});\n       }\n//exec:Schemas\n       public async Task<System.Web.Mvc.ActionResult> Schemas()\n       {\n           var context = new SphDataContext();\n           var ed = await context.LoadOneAsync<EntityDefinition>(t => t.Name == \"Customer\");\n           var script = await ed.GenerateCustomXsdJavascriptClassAsync();\n           this.Response.ContentType = \"application/javascript\";\n           return Content(script);\n       }\n}\n}\n\nline:21 Invalid expression term ';'\nline:21 ; expected\n  {\n  \"$type\": \"Bespoke.Sph.Domain.WorkflowCompilerResult, domain.sph\",\n  \"Result\": false,\n  \"Errors\": {\n    \"$type\": \"Bespoke.Sph.Domain.ObjectCollection`1[[Bespoke.Sph.Domain.BuildError, domain.sph]], domain.sph\",\n    \"$values\": [\n      {\n        \"$type\": \"Bespoke.Sph.Domain.BuildError, domain.sph\",\n        \"Message\": \"Invalid expression term ';'\",\n        \"Code\": \"            return \\\"Customer:\\\" + ;\",\n        \"Line\": 21,\n        \"ItemWebId\": \"\"\n      },\n      {\n        \"$type\": \"Bespoke.Sph.Domain.BuildError, domain.sph\",\n        \"Message\": \"; expected\",\n        \"Code\": \"            return \\\"Customer:\\\" + ;\",\n        \"Line\": 21,\n        \"ItemWebId\": \"\"\n      }\n    ]\n  },\n  \"Output\": \"c:\\\\project\\\\work\\\\sph\\\\bin\\\\output\\\\Dev.Customer.dll\"\n}\n  Expected: True\n  But was:  False\n\n   at NUnit.Framework.Assert.That(Object actual, IResolveConstraint expression, String message, Object[] args)\n   at NUnit.Framework.Assert.IsTrue(Boolean condition, String message)\n   at domain.test.entities.EntityDefinitionCodeTest.GenerateRootClass() in EntityDefinitionCodeTest.cs: line 51\n",
			"settings":
			{
				"buffer_size": 6883,
				"line_ending": "Windows",
				"name": "using Bespoke.Sph.Domain;"
			}
		},
		{
			"file": "/D/temp/sph/version.json",
			"settings":
			{
				"buffer_size": 54,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "     public ActionResult GetLoadedAssemblies()\n        {\n            var assesmblies = AppDomain.CurrentDomain.GetAssemblies();\n            var refAssemblies = from a in assesmblies\n                                where a.IsDynamic == false\n                                let name = a.GetName()\n                select new ReferencedAssembly\n                {\n                    Version = name.Version.ToString(),\n                    FullName = name.FullName,\n                    Location = a.Location,\n                    Name = name.Name\n                };\n\n            return Json(refAssemblies.ToArray(), JsonRequestBehavior.AllowGet);\n        }",
			"settings":
			{
				"buffer_size": 650,
				"line_ending": "Windows",
				"name": "public ActionResult GetLoadedAssemblies()"
			}
		},
		{
			"contents": "<EntityForm xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://www.bespoke.com.my/\" WebId=\"1f001469-c1c0-4693-969b-d783b7102ed3\" CreatedDate=\"0001-01-01T00:00:00\" ChangedBy=\"admin\" ChangedDate=\"2014-03-23T19:09:33.245833+08:00\" EntityFormId=\"1007\" EntityDefinitionId=\"2002\" Name=\"Patient transfer form\" Route=\"patient-transfer-form\" Note=\"\" IsAllowedNewItem=\"false\" IconClass=\"\" IconStoreId=\"\" IsPublished=\"true\" IsDefault=\"false\" IsWatchAvailable=\"false\" IsEmailAvailable=\"false\" IsPrintAvailable=\"false\" IsAuditTrailAvailable=\"false\" IsRemoveAvailable=\"false\" IsImportAvailable=\"false\" IsExportAvailable=\"false\" Operation=\"Transfer\"><FormDesign Name=\"\" Description=\"\" ConfirmationText=\"\" ImageStoreId=\"\"><FormElementCollection><FormElement xsi:type=\"SectionFormElement\" Name=\"HTML Section\" Label=\"Transfer\" Path=\"\" IsRequired=\"false\" Size=\"input-large\" CssClass=\"\" Visible=\"true\" Enable=\"true\" ElementId=\"a7204ab8-85b9-4f9d-b34b-8d9c0eacfe8a\" UseDisplayTemplate=\"false\"><FieldValidation IsRequired=\"false\" MaxLength=\"0\" MinLength=\"0\" Mode=\"\" /><LabelColLg xsi:nil=\"true\" /><LabelColMd xsi:nil=\"true\" /><LabelColSm xsi:nil=\"true\" /><LabelColXs xsi:nil=\"true\" /><InputColLg xsi:nil=\"true\" /><InputColMd xsi:nil=\"true\" /><InputColSm xsi:nil=\"true\" /><InputColXs xsi:nil=\"true\" /></FormElement></FormElementCollection><LabelColLg xsi:nil=\"true\" /><LabelColMd xsi:nil=\"true\" /><LabelColSm xsi:nil=\"true\" /><LabelColXs xsi:nil=\"true\" /><InputColLg xsi:nil=\"true\" /><InputColMd xsi:nil=\"true\" /><InputColSm xsi:nil=\"true\" /><InputColXs xsi:nil=\"true\" /></FormDesign><Rules /></EntityForm>",
			"settings":
			{
				"buffer_size": 1645,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import sublime, sublime_plugin\n\nclass ExampleCommand(sublime_plugin.TextCommand):\n	def run(self, edit):\n		self.view.insert(edit, 0, \"Hello, World!\")\n",
			"settings":
			{
				"buffer_size": 149,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n  {\n      \"role\": \"everybody\",\n      \"groupName\": \"search\",\n      \"route\": \"advanced-search\",\n      \"moduleId\": \"viewmodels/advanced-search\",\n      \"title\": \"Advanced Search\",\n      \"nav\": true,\n      \"icon\": \"fa-search\",\n      \"caption\": \"Search\",\n      \"settings\": null,\n      \"isAdminPage\": false,\n      \"showWhenLoggedIn\": false,\n      \"error\": \"\"\n  },",
			"settings":
			{
				"buffer_size": 357,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/temp/MiniBlog/Website/Web.config",
			"settings":
			{
				"buffer_size": 5521,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 58.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/project/work/sph/bin/web/docs/ParallelActivity.html",
		"/C/project/work/sph/restore-package.ps1",
		"/C/Users/bespoke1/Desktop/ddd.linq",
		"/C/project/work/sph/source/domain/domain.sph/Triggers/Activity.cs",
		"/C/project/work/sph/source/domain/domain.sph/Triggers/ScreenActivity.cs",
		"/C/project/work/sph/source/web/web.sph/SphApp/views/patient-details.html",
		"/C/project/work/sph/source/web/web.sph/SphApp/viewmodels/patient-details.js",
		"/C/project/work/sph/packages/Castle.Core.3.2.2/ASL - Apache Software Foundation License.txt",
		"/C/project/work/sph/source/web/web.sph/Controllers/WorkflowDefinitionController.cs",
		"/C/project/work/sph/source/web/web.sph/Views/Workflow/EditorTemplates/TextBox.cshtml",
		"/C/Users/itpro/AppData/Local/Temp/ipuuso0s.0.cs",
		"/D/temp/sph/Workflow_0_5.cs",
		"/D/temp/sph/Workflow_1_21.cs",
		"/D/temp/Workflow_1_5.cs",
		"/D/temp/Workflow_1_8.cs",
		"/D/temp/Workflow_1_13.cs",
		"/C/Users/bespoke1/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/bespoke1/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/bespoke1/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/project/work/sph/source/web/web.sph/App/partial/WorkflowDefinition.js",
		"/C/project/work/sph/source/web/web.sph/Views/Workflow/Start.cshtml"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"cshtm",
			"col-lg",
			"this",
			"\n        public async override Task InitiateAsync(Workflow wf)\n        {\n          ",
			"indent",
			"tab",
			"<input.*class=\".*(form-control).*\"",
			"<input.*class=\".*^(?!.*?form-control).*\"",
			"<input.*class=\".*^(form-control).*\"",
			"<input.*class=\".*(form-control).*\"",
			"<input.*class=\".*form-control.*\"",
			"xxlarge",
			"<input.*form-control.*$",
			"<input.*?^f.*$",
			"<input class=\"input-xxlarge form-control\" data-bind=\"value: FiredOnOperations\" id=\"fired-on-operations\" type=\"text\" name=\"FireOnOperations\" />",
			"<input.*form-control.*$",
			"<input.*^(form-control)"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"col-md"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "bin/sources/Patient.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15109,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10329.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6883,
						"regions":
						{
						},
						"selection":
						[
							[
								853,
								853
							]
						],
						"settings":
						{
							"auto_name": "using Bespoke.Sph.Domain;",
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 291.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/temp/sph/version.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 54,
						"regions":
						{
						},
						"selection":
						[
							[
								54,
								54
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 650,
						"regions":
						{
						},
						"selection":
						[
							[
								334,
								334
							]
						],
						"settings":
						{
							"auto_name": "public ActionResult GetLoadedAssemblies()",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1645,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1645
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 149,
						"regions":
						{
						},
						"selection":
						[
							[
								149,
								149
							]
						],
						"settings":
						{
							"default_dir": "C:\\Users\\bespoke1\\AppData\\Roaming\\Sublime Text 3\\Packages\\User",
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 357,
						"regions":
						{
						},
						"selection":
						[
							[
								357,
								357
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/D/temp/MiniBlog/Website/Web.config",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5521,
						"regions":
						{
						},
						"selection":
						[
							[
								1483,
								1056
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 144.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 40.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "sph.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"patient.",
				"bin\\sources\\Patient.cs"
			],
			[
				"pa-de",
				"source\\web\\web.sph\\SphApp\\views\\patient-details.html"
			],
			[
				"screea",
				"source\\domain\\domain.sph\\Triggers\\ScreenActivity.cs"
			],
			[
				"acti",
				"source\\domain\\domain.sph\\Triggers\\Activity.cs"
			],
			[
				"worde.js",
				"web/web.sph/App/partial/WorkflowDefinition.js"
			],
			[
				"workdec",
				"web/web.sph/Controllers/WorkflowDefinitionController.cs"
			],
			[
				"start",
				"web/web.sph/Views/Workflow/Start.cshtml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 308.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
