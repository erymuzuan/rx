{
  "$type": "Bespoke.Sph.Domain.Page, domain.sph",
  "Name": "Screen_1",
  "IsRazor": true,
  "IsPartial": false,
  "VirtualPath": "~/Views/TestMessaging2Workflow/Screen_1V0.cshtml",
  "Tag": "wf_test-messaging-2_ede3913f-3777-49ac-c299-0cda3aa51037",
  "Version": 0,
  "Mode": null,
  "Extension": null,
  "Code": "@using System.Web.Mvc.Html\r\n@using Bespoke.Sph.Domain\r\n@using Newtonsoft.Json\r\n@model Bespoke.Sph.Workflows_TestMessaging2_0.Screen_1ViewModel\r\n\r\n@{\r\n    ViewBag.Title = Model.Instance.Name;\r\n    Layout = \"~/Views/Shared/_Layout.cshtml\";\r\n    const string controllerString = \"Controller\";\r\n    var setting = new JsonSerializerSettings {TypeNameHandling = TypeNameHandling.All};\r\n    var confirmationText = Model.Screen.ConfirmationOptions.Value;\r\n    \r\n}\r\n\r\n<div class=\"row\">\r\n    <h1>@Model.Screen.FormDesign.Name</h1>\r\n    <span>@Model.Screen.FormDesign.Description</span>\r\n</div>\r\n<div class=\"row\">\r\n    <form class=\"form-horizontal\" id=\"workflow-start-form\" data-bind=\"with: instance\">\r\n        @foreach (var fe in Model.Screen.FormDesign.FormElementCollection)\r\n        {\r\n            var fe1 = fe;\r\n            fe1.Path = fe.Path.ConvertJavascriptObjectToFunction();\r\n            fe1.SetDefaultLayout(Model.Screen.FormDesign);\r\n            @(fe.UseDisplayTemplate ? Html.DisplayFor(f => fe1) : Html.EditorFor(f => fe1))\r\n        }\r\n   \r\n    </form>\r\n\r\n</div>\r\n\r\n\r\n@section scripts\r\n{\r\n    <script type=\"text/javascript\" src=\"/wf/test-messaging-2/v0/schemas\"></script>\r\n    <script type=\"text/javascript\">\r\n        require(['services/datacontext', 'jquery','services/app', 'services/system', 'services/config'], function(context,jquery,app, system, config) {\r\n\r\n            \r\n           var instance = context.toObservable(@Html.Raw(JsonConvert.SerializeObject(Model.Instance, setting)),/@Model.Namespace.Replace(\".\",\"\\\\.\")\\.(.*?),/),\r\n               screen = context.toObservable(@Html.Raw(JsonConvert.SerializeObject(Model.Screen, setting)),/@Model.Namespace.Replace(\".\",\"\\\\.\")\\.(.*?),/),\r\n               vm = {\r\n                id : \"test-messaging-2\",\r\n                instance : ko.observable(instance),    \r\n                screen : ko.observable(screen),\r\n                config : config,\r\n                isBusy : ko.observable(),\r\n                save : function(){\r\n                      var tcs = new $.Deferred(),\r\n                            data = ko.mapping.toJSON(vm.instance),\r\n                            button = $(this);\r\n\r\n                        button.prop('disabled', true);\r\n                        context.post(data, \"/wf/test-messaging-2/v0/screen-1\")\r\n                            .then(function(result) {\r\n                                tcs.resolve(result);\r\n                                @if(Model.Screen.ConfirmationOptions.Type == \"Message\")\r\n                                {\r\n                                    <text>\r\n                                    var msg = _.template('@Html.Raw(confirmationText)')(result.wf);\r\n                                    app.showMessage(msg, '@Model.Screen.Name', ['OK'])\r\n                                        .done(function(dr){\r\n                                            console.log(dr);\r\n                                        });\r\n                                    </text>\r\n                                }else\r\n                                {\r\n                                    <text>\r\n                                    window.location = \"@confirmationText\";\r\n                                    </text>\r\n                                }\r\n                       \r\n\r\n                            });\r\n                        return tcs.promise();\r\n                }\r\n            };\r\n            \r\n            instance.addChildItem = function(list, type){\r\n                return function(){\r\n                     list.push(new type(system.guid()));                  \r\n                }\r\n            };\r\n            \r\n            instance.removeChildItem = function(list, obj){\r\n                return function(){\r\n                    list.remove(obj);\r\n                }\r\n            };\r\n\r\n            ko.applyBindings(vm, document.getElementById('body'));\r\n            @*  the div#body is defined in _Layout.cshtml, if you use different Layout then this has got to changed accordingly *@\r\n\r\n      \r\n        });\r\n\r\n    </script>\r\n}",
  "CreatedBy": "admin",
  "Id": "1b998f24-569b-4221-9a92-3962f149b178",
  "CreatedDate": "2015-01-27T18:25:36.1374354+08:00",
  "ChangedBy": "admin",
  "ChangedDate": "2015-01-27T18:25:36.1364342+08:00",
  "WebId": "06e8dc8a-1a4d-4e25-aacb-14f1aba8b621"
}